C51 COMPILER V9.00   NRF_TX                                                                03/21/2017 00:29:02 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE NRF_TX
OBJECT MODULE PLACED IN .\Objects\NRF_tx.obj
COMPILER INVOKED BY: G:\Keil_v5\C51\BIN\C51.EXE NRF_tx.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\NR
                    -F_tx.lst) OBJECT(.\Objects\NRF_tx.obj)

line level    source

   1          //#include<stc15w.h> 
   2          #include"NRF2401.h"
   3          #define u8 unsigned char
   4          #define u16 unsigned int
   5          
   6          #define FOSC 11059200L
   7          
   8          #define T1MS (65536-FOSC/1000)      //1T模式
   9          //#define T1MS (65536-FOSC/12/1000) //12T模式
  10          //-----------------主循环架构的定义-----------------------------------
  11          u8      R_2ms=0;//2ms计时
  12          bit     Flg_2ms=0;
  13          char    R_Jmp2msCnt=0;
  14          char    R_MMode=0;
  15          #define D_Mode1 0
  16          #define D_Mode2 1
  17          #define D_Mode3 2
  18          #define D_Mode4 3
  19          #define D_Mode5 4
  20          #define D_Mode6 5
  21          
  22          //----------------------------------------------------------
  23          /**********************************************************************************/
  24          //----按键扫描、按键检测、按键处理的定义-----------------------------------
  25          sbit key_onoff   = P5^5;
  26          sbit key_add     = P5^4;
  27          sbit key_sub     = P2^0;
  28          sbit key_slt     = P2^4; 
  29          #define nokey             0
  30          #define addkey          1
  31          #define subkey          2
  32          #define onoffkey        3
  33          #define sltkey          4
  34          
  35          u8      KeyDly          =0;
  36          u8      KeyMarkDly      =0;
  37          bit     FLG_keymark     =0;
  38          char    KeyValue        =0;
  39          char    R_curkey        =0;
  40          char    R_keybuf        =0;
  41          //----------------------------------------------------------
  42          //*************分别是5个从机对应的固定通信频道
  43          u8 R_CHtab[5]={0x40,0x45,0x48,0x4a,0x4f};       //频道
  44          //**********************用户码+地址码+data1+data2+data3，分别对应5个从机                  
  45          u8 R_SendData_Tab[5][6]={{0xf1,0xe0,10,0,0,0},{0xf2,0xe0,60,0,0,0},
  46                                   {0xf4,0xe0,110,0,0,0},{0xf8,0xe0,160,0,0,0},
  47                                   {0xfa,0xe0,210,0,0,0}};        //每个频道的数据数组
  48          #define D_RFChance1     0
  49          #define D_RFChance2     1
  50          #define D_RFChance3     2
  51          #define D_RFChance4     3
  52          #define D_RFChance5     4
  53          //sfr P1M0=0x91;        //IO口控制寄存器
  54          //
C51 COMPILER V9.00   NRF_TX                                                                03/21/2017 00:29:02 PAGE 2   

  55          //sfr ADC_CONTR=0xc5;   //ADC控制寄存器
  56          //sfr ADC_DATA=0xc6;
  57          //sfr ADC_LOW2=0xbe;
  58          //
  59          //sfr AUXR=0x8e;
  60          
  61          sbit    led=P5^5;
  62          u8 ad[4];       //4个电位器的AD值
  63          u8 tx[6];       //6个发送数据
  64          u8 w;
  65          
  66          void initial()
  67          {
  68   1      //      ADC_CONTR=0x80; //打开ADC电源
  69   1      //      P1M0=0x0f;              //配置相应IO口为输入态
  70   1      //      AUXR=0x10;              //允许ADC中断
  71   1      //
  72   1      //      TMOD=0x01;              
  73   1      //      delay(1000);    
  74   1      //      IE=0xa2;
  75   1          AUXR |= 0x80;                   //定时器0为1T模式
  76   1      //  AUXR &= 0x7f;                   //定时器0为12T模式
  77   1      
  78   1          TMOD = 0x00;                    //设置定时器为模式0(16位自动重装载)
  79   1          TL0 = 0x00;//T1MS;                     //初始化计时值
  80   1          TH0 = 0x00;//T1MS >> 8;
  81   1              TL0 = 0x9A;             //设置定时初值
  82   1              TH0 = 0xFA;             //设置定时初值125us    
  83   1          //TR0 = 1;                        //定时器0开始计时
  84   1          ET0 = 1;                        //使能定时器0中断
  85   1          EA = 1;
  86   1      
  87   1      }
  88          
  89          void    MainStatus();
  90          void    DealKey();
  91          void    ReadKeyValue();
  92          void    KeyScan();
  93          void    Timer20msCnt();
  94          void    RF_CH_Change(unsigned char      RF_CH);
  95          
  96          main()
  97          {
  98   1              initial();
  99   1              TX_mode();
 100   1              //ADC_CONTR=0x88;       //开始测量第一个电位器
 101   1              TR0=1;
 102   1              while(1)
 103   1              {            
 104   2              MainStatus();
 105   2              DealKey();
 106   2              if(Flg_2ms)
 107   2                      {
 108   3                      Flg_2ms=0;
 109   3                      if(++R_Jmp2msCnt == 10)R_Jmp2msCnt=0;
 110   3                      switch(R_Jmp2msCnt)
 111   3                              {
 112   4                              case    0:
 113   4                                              ReadKeyValue();
 114   4                                      break;
 115   4                              case    1:
 116   4                                      
C51 COMPILER V9.00   NRF_TX                                                                03/21/2017 00:29:02 PAGE 3   

 117   4                                      break;
 118   4                              case    2:
 119   4                                      
 120   4                                      break;                                                                                          
 121   4                              case    3:
 122   4                                      
 123   4                                      break;
 124   4                              case    4:
 125   4                                      
 126   4                                      break;
 127   4                              case    5:
 128   4                                      
 129   4                                      break;
 130   4                              case    6:
 131   4                                      
 132   4                                      break;
 133   4                              case    7:
 134   4                                      
 135   4                                      break;
 136   4                              case    8:
 137   4                                      
 138   4                                      break;  
 139   4                              case    9:
 140   4                                              Timer20msCnt();
 141   4                                      break;
 142   4                              default:
 143   4                                      break;                                                                                                                          
 144   4                              }
 145   3                      }       
 146   2              }
 147   1      }
 148          
 149          void et0()interrupt 1
 150          {
 151   1              static  char    temper=0,R_2msCnt=0;
 152   1              temper++;
 153   1              R_2msCnt++;
 154   1              
 155   1              if(R_2msCnt == 16)
 156   1                      {
 157   2                      R_2msCnt=0;
 158   2                      Flg_2ms=1;      
 159   2                      }
 160   1              KeyScan();
 161   1              
 162   1      }
 163          
 164          void adc_spi()interrupt 5
 165          {
 166   1      
 167   1      }
 168          
 169          void    MainStatus()
 170          {
 171   1              switch(R_MMode)
 172   1              {
 173   2                      case D_Mode1:
 174   2                              
 175   2                              break;
 176   2                      case D_Mode2:
 177   2                              
 178   2                              break;
C51 COMPILER V9.00   NRF_TX                                                                03/21/2017 00:29:02 PAGE 4   

 179   2                      case D_Mode3:
 180   2                              
 181   2                              break;
 182   2                      case D_Mode4:
 183   2                              
 184   2                              break;
 185   2                      case D_Mode5:
 186   2                              
 187   2                              break;
 188   2                      case D_Mode6:
 189   2                              
 190   2                              break;          
 191   2                      default :
 192   2                              break;                                                                          
 193   2                      }
 194   1              }
 195          void    Timer20msCnt()
 196          {
 197   1              static char     R_500msCnt=0,ii;        
 198   1              static char     R_CHtmp=0;              
 199   1              R_500msCnt++;
 200   1              
 201   1      //----------计时20ms------------------------------------                
 202   1              {
 203   2              R_CHtmp++;
 204   2              if(R_CHtmp == 5)R_CHtmp=0;
 205   2      //              RF_CH_Change(R_CHtmp);  
 206   2              FIFO_write(R_SendData_Tab[R_CHtmp]);    //发射数据每个频道的周期：20*5ms
 207   2      //      for(ii==1;ii<5;ii++)
 208   2      //              {
 209   2      //              R_SendData_Tab[R_CHtmp][2]=0;   
 210   2      //              }
 211   2              }
 212   1      //----------计时20ms---END---------------------------------     
 213   1      
 214   1      //----------计时500ms------------------------------------       
 215   1              if( (R_500msCnt == 25) || (R_500msCnt == 0) )
 216   1                      {
 217   2      //----------此段为500ms------------------------------------                     
 218   2                      }
 219   1      //----------计时500ms--END----------------------------------
 220   1      
 221   1      //----------计时1s------------------------------------                          
 222   1              if(R_500msCnt == 50)
 223   1                      {
 224   2                      R_500msCnt=0;
 225   2      //----------此段为1s------------------------------------                        
 226   2      
 227   2                      led=!led;               
 228   2      //              if(led)R_SendData_Tab[R_CHtmp][1]=255;
 229   2      //                      else
 230   2      //                              R_SendData_Tab[R_CHtmp][1]=0;   
 231   2              
 232   2                                      
 233   2                      }               
 234   1      //----------计时1s---END---------------------------------                               
 235   1                              
 236   1      }
*** WARNING C280 IN LINE 197 OF NRF_TX.C: 'ii': unreferenced local variable
 237          void    DealKey()//放在主循环中执行
 238          {
 239   1              char    R_BottomMode=0;
C51 COMPILER V9.00   NRF_TX                                                                03/21/2017 00:29:02 PAGE 5   

 240   1              static  char    n=0;
 241   1              if(R_curkey != 0)
 242   1                      {
 243   2                       R_BottomMode = R_curkey;
 244   2                       R_curkey=0;
 245   2      
 246   2                       switch(R_BottomMode)
 247   2                              {
 248   3                              case addkey:            
 249   3      //              led=!led;               
 250   3      //              if(led)R_SendData_Tab[D_RFChance1][1]=255;
 251   3      //                      else
 252   3      //                              R_SendData_Tab[D_RFChance1][1]=0;
 253   3                                      break;
 254   3                              case subkey:            
 255   3                                        
 256   3                                      break;
 257   3                              case onoffkey:          
 258   3                      led=!led;               
 259   3                      
 260   3                      if(n==5)n=0;            
 261   3                      if(led)R_SendData_Tab[D_RFChance1+n][2]=255,n++;
 262   3                              else
 263   3                                      R_SendData_Tab[D_RFChance1+n][2]=5;
 264   3                                      break;
 265   3                              case sltkey:      
 266   3                                      
 267   3                                      break;
 268   3                               default:;                         
 269   3                                       break;
 270   3                              }                       
 271   2                      }
 272   1              }
 273          void    ReadKeyValue()//放在2ms分时中执行，20ms执行一次
 274          {
 275   1              if((KeyDly++ >= 2))
 276   1                      { 
 277   2                       R_keybuf=0;
 278   2                       FLG_keymark=0;
 279   2                       KeyDly=0;
 280   2                       KeyValue=0;
 281   2                       KeyMarkDly=0;
 282   2                      }
 283   1              if(KeyValue != 0)
 284   1                      { 
 285   2                      KeyDly=0;
 286   2                      if(KeyValue == R_keybuf)
 287   2                              {
 288   3                                      KeyMarkDly++;
 289   3                                      if(FLG_keymark==0)
 290   3                                              {
 291   4                                              if(KeyMarkDly >= 50)
 292   4                                                      {
 293   5                                                      KeyMarkDly=0;
 294   5                                                      FLG_keymark=1;
 295   5                                                      R_keybuf=R_curkey=KeyValue;     
 296   5                                                      KeyValue=0;                                             
 297   5                                                      }
 298   4                                                      else
 299   4                                                              {
 300   5                                                              KeyValue=0;
 301   5                                                              }
C51 COMPILER V9.00   NRF_TX                                                                03/21/2017 00:29:02 PAGE 6   

 302   4                                              }
 303   3                                              else
 304   3                                                      {
 305   4                                                      if(KeyMarkDly >= 25)
 306   4                                                              {
 307   5                                                              KeyMarkDly=0;
 308   5                                                              FLG_keymark=1;
 309   5                                                              R_keybuf=R_curkey=KeyValue;     
 310   5                                                              KeyValue=0;                             
 311   5                                                              }
 312   4                                                      else
 313   4                                                              {
 314   5                                                              KeyValue=0;
 315   5                                                              }                                               
 316   4                                                      }               
 317   3                               }
 318   2                              else//非连续建
 319   2                                      {
 320   3                                      R_keybuf=R_curkey=KeyValue;
 321   3                                      KeyValue=0;
 322   3                                      FLG_keymark=0;
 323   3                                      KeyMarkDly=0;   
 324   3                                      }               
 325   2                              }
 326   1                      else //无按键按下
 327   1                              {
 328   2                                      //R_keybuf=0;
 329   2                               //FLG_keymark=0;
 330   2                               //KeyDly=0;
 331   2                               //KeyValue=0;
 332   2                               //KeyMarkDly=0;
 333   2                              }
 334   1              }
 335                  
 336          void    KeyScan()//放在中断函数中执行125us执行一次
 337          {
 338   1              KeyValue=0;
 339   1              if(!key_add)
 340   1                      {
 341   2                              KeyValue=addkey;                
 342   2                      }
 343   1              if(!key_sub)
 344   1                      {
 345   2      
 346   2                              KeyValue=subkey;        
 347   2                      }
 348   1              if(!key_slt)
 349   1                      {
 350   2                              KeyValue=sltkey;        
 351   2                      }
 352   1              if(!key_onoff)
 353   1                      {
 354   2                              KeyValue=onoffkey;      
 355   2                      }
 356   1              }
 357          void    RF_CH_Change(unsigned char      RF_CH)
 358          {
 359   1              CE=0;
 360   1              SCK=0;
 361   1      //      REG_write(0x00,0x0a); //CRC,8 bit,Power on,TX
 362   1      //      REG_write(0x01,0x00); //unable ACK
 363   1      //      REG_write(0x02,0x01); //enable P0
C51 COMPILER V9.00   NRF_TX                                                                03/21/2017 00:29:02 PAGE 7   

 364   1      //      REG_write(0x04,0x00); //unable ACK
 365   1              REG_write(0x05,R_CHtab[RF_CH]); //可自定义
 366   1      //      REG_write(0x06,0x07); //1Mbps,0dBm
 367   1      //      REG_write(0x11,0x06);//DATA 6 bytes     
 368   1              CE=1;           
 369   1      }
 370                  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    364    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     60    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
