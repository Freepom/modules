C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: G:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(9,SPEED) BROWSE INCDIR(.\SRC) DEBUG OBJECTEXTEND PRINT(.
                    -\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          //-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   2          //项目名称：软件架构DEMO
   3          //开发人员：林其平
   4          //联系方式：doit0827@foxmail.com/15915979843
   5          //开发环境：C51语言
   6          //开发工具：keil-V5
   7          //适用MCU型号：STC15W**
   8          //软件版本：A03
   9          //更新日期：2017-10-29 17:21:52
  10          //更新内容：
  11          //--------1、子程序命名 2、添加串口通讯内容 3、完善说明注释
  12          //--------
  13          //--------
  14          //备注：
  15          //              晶振频率：33.1776M Hz
  16          //              串口波特率：460800Bps
  17          //              
  18          //
  19          //-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  20          #include "main.h"
  21          #include "display.h"
  22          #include "ReadKey.h"
  23          #include "ds1302.h"
  24          //#include "eerom.h"
  25          #include"AT24C.h"
  26          //-----------------主循环架构的定义-----------------------------------
  27          //-----------------主循环架构的定义-----------------------------------
  28          sbit Pin_Pluse=P3^2;//脉冲检测
  29          bit Flg_PinSta=1;
  30          //u8 R_PinCnt;
  31          
  32          sbit Pin_Relay1=P3^3;//
  33          sbit Pin_Relay2=P3^1;//
  34          sbit Pin_Relay3=P3^0;//
  35          
  36          u8 R_RlDelayOpen;
  37          
  38          sbit Pin_485EN=P2^0;
  39          #define RS485_EnRx {Pin_485EN=0;}
  40          #define RS485_EnTx {Pin_485EN=1;}
  41          
  42          u16 R_MainTemper;
  43          //u8    R_TimerMSCnt;
  44          u8      R_2ms=0;//2ms计时
  45          bit     Flg_2ms=0;
  46          bit     Flg_500MsFlash;
  47          char    R_JmpmsCnt=0;
  48          
  49          u8 idata RxUART_Tab[10];
  50          u8 idata TxUART_Tab[25]; 
  51          bit Flg_StartUART;
  52          u8 R_RxCnt,R_TxCnt;
  53          bit Flg_RecOK;
  54          
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 2   

  55          char    R_WkMode;
  56          #define D_WkMode_Auto   0
  57          #define D_WkMode_Hand   1
  58          #define D_WkMode_Error  2
  59          #define D_WkMode4       3
  60          #define D_WkMode5       4
  61          #define D_WkMode6       5
  62          
  63          
  64          #define D_SetMode_TV    8
  65          #define D_SetMode_Frc   7
  66          #define D_SetMode_K             6
  67          #define D_SetMode_V2    5
  68          #define D_SetMode_V1    4
  69          #define D_SetMode_Min   3
  70          #define D_SetMode_Day   2
  71          #define D_SetMode_Mode  1
  72          u8 R_SetMode;//设置模式：MD-DAY-MIN-V1-V2-K-FRE-TV      1
  73          u8 R_MachCnt;//设备编号2
  74          u16 R_Data_Day,R_Data_Min=60,R_Data_V1;//时间：天-分钟，加注量：升      8
  75          //u16 R_Data_MinTmp=1439;
  76          u16 R_Data_DayBak,R_Data_MinBak=60;//时间备份：天-分钟  12
  77          u16 R_Data_Frc=100;//脉冲输入频率上限   14
  78          float R_PreFrc;//当前频率，计算后有小数位       
  79          u16 R_PreFrcTmp=8001,R_PreFrcCnt;//当前频率缓存-频率换算时间计数
  80          u16 R_Data_V2=1000,R_Data_K=4000;//加注量，系数 18
  81          double R_DataTmp_TV;//总的加注量，最大9999L，由于需要小数作判断，故为double类型
  82          u16 R_Data_TV;
  83          u16 R_Data_Add;
  84          u8 R_NT_V2=1,R_NT_K=0,R_NT_TV;//小数点保存，加注量L-系数K-总的加注量    21
  85          u8 bdata R_Flag;        //22
  86          sbit Flg_AutoMode=R_Flag^0;     //=1：自动模式，=0：手动模式
  87          sbit Flg_SetMode=R_Flag^1;      //=1：设置模式，=0：非设置模式
  88          sbit Flg_RelayWk1=R_Flag^2;             //继电器1
  89          sbit Flg_RelayWk2=R_Flag^3;             //继电器1
  90          sbit Flg_RelayWk3=R_Flag^4;             //继电器1
  91          sbit Flg_ToAdd=R_Flag^5;                //
  92          sbit Flg_RelayWkBak1=R_Flag^6;          //
  93          sbit Flg_RelayWkBak2=R_Flag^7;          //
  94          //bit Flg_AutoMode;
  95          //bit Flg_SetMode;
  96          u8 R_ExitSetTm;                         //自动退出设置时间      23
  97          #define D_DispTmUI 3
  98          u8 R_DispTmUI=D_DispTmUI;                       //显示主界面时间
  99          
 100          //----------------------------------------------------------
 101          
 102          
 103          
 104          //----------------------------------------------------------
 105          
 106          //----------------------------------------------------------
 107          u8 R_Second,R_SecondDS,R_Minute,R_Hour;
 108          u8 R_SecondBak;
 109          bit Flg_Second;
 110          bit Flg_ToErrom;
 111          u8 idata StoreData_Tab[30];
 112          u8 R_DelaySave;
 113          
 114          
 115          u8 R_Cl_P=25;//换算常数P
 116          u32 R_PluseCnt;//脉冲计数       27
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 3   

 117          u32 R_AddPluseBak;//加注脉冲计数        31
 118          u32 R_AddPluseCnt;//单次加注脉冲计数    35
 119          
 120          u16 R_AddTimer; //时间单位：1S  37
 121          u16 R_CheckOutTm=120;   //泄露检测，时间单位：1S        39
 122          
 123          u8 R_Protect;   //40
 124          #define D_Nomal                 0
 125          #define D_Protect_E1    1
 126          #define D_Protect_E2    2
 127          #define D_Protect_E3    3
 128          #define D_Protect_E4    4
 129          #define D_Protect_E5    5
 130          #define D_Protect_E6    6
 131          #define D_Protect_E7    7
 132          
 133          u8 bdata R_Flag2;       //41
 134          sbit Flg_E1=R_Flag2^0;
 135          sbit Flg_E2=R_Flag2^1;
 136          sbit Flg_E3=R_Flag2^2;
 137          sbit Flg_E4=R_Flag2^3;
 138          sbit Flg_E5=R_Flag2^4;
 139          sbit Flg_E6=R_Flag2^5;
 140          sbit Flg_E7=R_Flag2^6;
 141          
 142          u8 R_RelayWkTmON;
 143          u8 R_RelayWkTmOFF;
 144          //----------------------------------------------------------
 145          //----------------------------------------------------------
 146          //void Delay10us()              //@11.0592MHz
 147          //{
 148          //      unsigned char i;
 149          //
 150          //      _nop_();
 151          //      i = 10;
 152          //      while (--i);
 153          //}
 154          //-----------------------------------------
 155          //
 156          //函数声明
 157          //
 158          //-----------------------------------------
 159          void Calculate();
 160          void Recovery();
 161          void CheckError();
 162          void    ClearData_UART(bit Flg_Sta);
 163          void    SendData_UART();
 164          void    RecData_UART();
 165          void RelayDrv();
 166          void SaveDateToErrom();
 167          void    DealKey();
 168          //void  KeyScan();
 169          void    UpdateDisplay();
 170          void    Timer50msCnt();
 171          void    Sys_Initial();
 172          //-------------------------------------------
 173          /*---------------主循环---------------------
 174          //--------------------------------------------
 175          /输入：
 176          /输出：
 177          /备注：
 178          /       
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 4   

 179          */
 180          //-------------------------------------------
 181          main()
 182          {
 183   1              Sys_Initial();  //定时器初始化
 184   1              Init_DS1302();
 185   1              Init_AT24C();
 186   1      //      if(IapReadByte(0x0000)!=0x55)//保存区域分界线的值
 187   1      //              {
 188   1      //              IapEraseSector(0x000);
 189   1      //              IapProgramByte(0x001,0>>8);     //
 190   1      //              IapProgramByte(0x002,0);
 191   1      //              IapProgramByte(0x003,0>>8);     //
 192   1      //              IapProgramByte(0x004,0);        
 193   1      //              IapProgramByte(0x005,0>>8);     //
 194   1      //              IapProgramByte(0x006,0);
 195   1      //              IapProgramByte(0x007,0>>8);     //
 196   1      //              IapProgramByte(0x008,0);        
 197   1      //              IapProgramByte(0x009,0>>8);     //
 198   1      //              IapProgramByte(0x00a,0);
 199   1      //              IapProgramByte(0x00b,0>>8);     //
 200   1      //              IapProgramByte(0x00c,0);        
 201   1      //              IapProgramByte(0x00d,00>>8);    //
 202   1      //              IapProgramByte(0x00e,00);
 203   1      //              IapProgramByte(0x00f,0);        //
 204   1      //              IapProgramByte(0x010,0);                                        
 205   1      //              IapProgramByte(0x011,0);
 206   1      //              IapProgramByte(0x012,0);
 207   1      //              IapProgramByte(0x013,0);
 208   1      //              IapProgramByte(0x000,0x55);
 209   1      //              Flg_ToErrom=0;                          
 210   1      //              }
 211   1      //      R_Data_Day      =(u16)IapReadByte(0x0001)>>8|IapReadByte(0x0002);       
 212   1      //      R_Data_Min      =(u16)IapReadByte(0x0003)>>8|IapReadByte(0x0004);       
 213   1      //      R_Data_V1       =(u16)IapReadByte(0x0005)>>8|IapReadByte(0x0006);       
 214   1      //      R_Data_V2       =(u16)IapReadByte(0x0007)>>8|IapReadByte(0x0008);       
 215   1      //      R_Data_K        =(u16)IapReadByte(0x0009)>>8|IapReadByte(0x000a);       
 216   1      //      R_Data_Frc      =(u16)IapReadByte(0x000b)>>8|IapReadByte(0x000c);       
 217   1      //      R_DataTmp_TV    =(u16)IapReadByte(0x000d)>>8|IapReadByte(0x000e);
 218   1      //      R_Flag          =IapReadByte(0x000f);
 219   1      //      R_SetMode       =IapReadByte(0x0010);
 220   1      //      R_NT_V2         =IapReadByte(0x0011);
 221   1      //      R_NT_K          =IapReadByte(0x0012);
 222   1      //      R_NT_TV         =IapReadByte(0x0013);
 223   1              P2=0xff;
 224   1              ClrWDT;                         
 225   1              while(1)
 226   1              {
 227   2              ClrWDT; 
 228   2              RecData_UART();
 229   2              SendData_UART();
 230   2              DealKey();      //按键处理
 231   2              CheckError();
 232   2              Recovery();
 233   2              RelayDrv();
 234   2              
 235   2              if(Flg_2ms)     //10毫秒计时处理
 236   2                      {
 237   3                      Flg_2ms=0;
 238   3      
 239   3                      if(++R_JmpmsCnt == 10)R_JmpmsCnt=0;
 240   3                      switch(R_JmpmsCnt)      //2毫秒分时处理
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 5   

 241   3                              {
 242   4                              case    0:
 243   4                              Ds1302_Read_Time();
 244   4                              if(R_SecondBak!=time_buf1[6])
 245   4                                      {
 246   5                                      Flg_Second=1;   
 247   5                                      }
 248   4                              R_SecondBak=time_buf1[6];
 249   4                                      break;
 250   4                              case    1:
 251   4                                              UpdateDisplay();
 252   4                                      break;
 253   4                              case    2:
 254   4                                              SaveDateToErrom();
 255   4                                      break;                                                                                          
 256   4                              case    3:
 257   4                                              Calculate();
 258   4                                      break;
 259   4                              case    4:
 260   4      //                                      
 261   4                                      break;
 262   4                              case    5:
 263   4                                              ReadR_KeyValue();       //按键转换
 264   4                                      break;
 265   4                              case    6:
 266   4                                              UpdateDisplay();
 267   4                                      break;
 268   4                              case    7:
 269   4      //                                      
 270   4                                              
 271   4                                      break;                                                                                          
 272   4                              case    8:
 273   4                                              CheckError();   
 274   4                                      break;
 275   4                              case    9:
 276   4                                              Timer50msCnt(); //20毫秒计时
 277   4                                      break;
 278   4                              default:
 279   4                                      break;                                                                                                                          
 280   4                              }
 281   3                      }       
 282   2              }
 283   1      }
 284          //-------------------------------------------
 285          /*---------------定时器中断子程序------------
 286          /输入：定时器T0中断
 287          /输出：2毫秒标志Flg_2ms=1，按键扫描
 288          /备注：定时器0方式2,16位自动重载，定时125us
 289          /
 290          */
 291          //-------------------------------------------
 292          void Inter_Timer0()interrupt 1
 293          {
 294   1              static u8 R_MSCnt=0;
 295   1      //      TL0 = 0x9A;             //设置定时初值
 296   1      //      TH0 = 0xFA;             //设置定时初值125us
 297   1      //      if(Flg_PinSta) 
 298   1      //              {
 299   1      //              if(R_PinCnt)
 300   1      //                      {
 301   1      //                      R_PinCnt--;
 302   1      //                      Pin_Pluse=!Pin_Pluse;   
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 6   

 303   1      //                      }
 304   1      //                      else
 305   1      //                              {
 306   1      //                              Pin_Pluse=1;    
 307   1      //                              }       
 308   1      //              }
 309   1              if(R_PreFrcCnt<10000) 
 310   1                      {
 311   2                      R_PreFrcCnt++;          
 312   2                      }
 313   1                      else
 314   1                              {
 315   2                              R_PreFrcTmp=R_PreFrcCnt;        
 316   2                              }
 317   1              R_MSCnt++;                              
 318   1              if(R_MSCnt == 2000/T0Cycle)
 319   1                      {
 320   2                      R_MSCnt=0;
 321   2                      Flg_2ms=1;      
 322   2                      }
 323   1              
 324   1      //      BeepDrv();
 325   1      //      KeyScan();      //按键扫描
 326   1              DispDrv();      
 327   1      }
 328          //-------------------------------------------
 329          /*---------------串口中断子程序------------
 330          /输入：串口中断
 331          /输出：
 332          /备注：
 333          /
 334          */
 335          //-------------------------------------------
 336          void Inter_Serial() interrupt 4
 337          {
 338   1              unsigned char len, i;
 339   1              unsigned int j=0;       
 340   1              static u8 R_RCnt;
 341   1      //      RI=0;
 342   1      //      if(0x7F == SBUF) //? ? ? ? ? ? ?//判断是否为下载流信息
 343   1      //      {
 344   1      //      IAP_CNTR =IAP_ENABLE; //?//允许IAP, 也就是直接进入下载程序
 345   1      //      // soft_reset();
 346   1      //      }
 347   1      
 348   1              if(RI)//780ms,22MHz 接收一个数据要80us
 349   1              {               
 350   2                      if(Flg_StartUART==0)
 351   2                              {
 352   3                              len=SBUF;
 353   3                              RI=0;                                   
 354   3                              if(len==0xff)
 355   3                                      {
 356   4                                      R_RCnt++;       
 357   4                                      if(R_RCnt==2)
 358   4                                              {
 359   5                                              Flg_StartUART=1;        
 360   5                                              }       
 361   4                                      }
 362   3                              
 363   3                              }
 364   2                              else
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 7   

 365   2                                      {
 366   3                                              len=SBUF;
 367   3                                              RI=0;                                           
 368   3                                              for(i=0;i<len;i++)
 369   3                                              {
 370   4                                                      while(!RI)
 371   4                                                      {
 372   5                                                              j++;
 373   5                                                              if(j>200)
 374   5                                                              {
 375   6                                                                  break;
 376   6                                                              }
 377   5                                                      }
 378   4                                                      if(j<200)
 379   4                                                      {
 380   5                                                              RxUART_Tab[i]=SBUF;
 381   5                                                              RI=0;   
 382   5                                                              j=0;
 383   5                                                                                      
 384   5                                                      }
 385   4                                                      else
 386   4                                                      {
 387   5                                                          break;
 388   5                                                      }
 389   4                                                      
 390   4                                              }
 391   3      //                                      if(i==len)//接收完成
 392   3                                              {
 393   4                                                      REN=0;
 394   4                                                      Flg_StartUART=0;
 395   4                                                      R_RCnt=0;
 396   4                                              }                                       
 397   3                                      }
 398   2              }
 399   1              else if(!RI && TI)//发送
 400   1              {
 401   2                      TI=0;
 402   2                      len=TxUART_Tab[2];
 403   2                      for(i=0;i<len;i++)
 404   2                      {
 405   3      //                      Pin_Pluse=!Pin_Pluse;
 406   3                              SBUF=TxUART_Tab[i];
 407   3                              while(!TI);
 408   3                              TI=0;   
 409   3                              //Delay10us();//Delay10us();//Delay10us();
 410   3      //                      Delay10us();//Delay10us();                      
 411   3                      }
 412   2                      REN=1;
 413   2              }               
 414   1      
 415   1      }
 416          
 417          //-------------------------------------------
 418          /*---------------外部中断0子程序------------
 419          //--------------------------------------------
 420          /输入：
 421          /输出：
 422          /备注：下降沿触发
 423          /
 424          */
 425          //-------------------------------------------
 426          void Inter_Ext0() interrupt 0       //INT0中断入口
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 8   

 427          {
 428   1      //    FLAG = INT0;                //保存INT0口的状态, INT0=0(下降沿); INT0=1(上升沿)
 429   1      }
 430          //-------------------------------------------
 431          /*---------------显示数据更新子程序------------
 432          //--------------------------------------------
 433          /输入：需要显示的数据
 434          /输出：显示缓存R_DBUF1,R_DBUF2,R_DBUF3,R_DBUF4等，用于显示驱动层
 435          /备注：放在2毫米分时中调用
 436          /
 437          */
 438          //-------------------------------------------
 439          void    UpdateDisplay()
 440          {
 441   1              Flg_DispOK=0;
 442   1              R_DBUF1=0,R_DBUF2=0,R_DBUF3=0,R_DBUF4=0,R_DBUF5=0;
 443   1      
 444   1              switch(R_WkMode)
 445   1              {
 446   2                      case 0:
 447   2      //                      break;
 448   2                      case 1:
 449   2                                      switch(R_SetMode)
 450   2                                      {
 451   3                                              case 0:
 452   3                                                              R_DBUF1=C_SEG|E_SEG|G_SEG;
 453   3                                                              R_DBUF2=Digit_Tab[R_MachCnt%1000/100];
 454   3                                                              R_DBUF3=Digit_Tab[R_MachCnt%100/10];
 455   3                                                              R_DBUF4=Digit_Tab[R_MachCnt%10];                
 456   3                                                      break;      
 457   3                                              case D_SetMode_Mode:
 458   3                                                              if(Flg_AutoMode)
 459   3                                                                      {
 460   4                                                                      R_DBUF4=Digit_Tab[2];           
 461   4                                                                      }
 462   3                                                                      else
 463   3                                                                              {
 464   4                                                                              R_DBUF4=Digit_Tab[1];   
 465   4                                                                              }
 466   3                                      
 467   3                                                      break;
 468   3                                              case D_SetMode_Day:
 469   3      //                                                              if(R_Data_Day/1000)
 470   3                                                                              R_DBUF1=Digit_Tab[R_Data_Day/1000];
 471   3      //                                                              if(R_Data_Day%1000/100)
 472   3                                                                              R_DBUF2=Digit_Tab[R_Data_Day%1000/100];
 473   3      //                                                              if(R_Data_Day%100/10)
 474   3                                                                              R_DBUF3=Digit_Tab[R_Data_Day%100/10];
 475   3                                                                      R_DBUF4=Digit_Tab[R_Data_Day%10];               
 476   3                                                      break;                  
 477   3                                      
 478   3                                              case D_SetMode_Min:
 479   3      //                                                      if(R_Data_Min/1000)
 480   3                                                                      R_DBUF1=Digit_Tab[R_Data_Min/1000];
 481   3      //                                                      if(R_Data_Min%1000/100)
 482   3                                                                      R_DBUF2=Digit_Tab[R_Data_Min%1000/100];
 483   3      //                                                      if(R_Data_Min%100/10)
 484   3                                                                      R_DBUF3=Digit_Tab[R_Data_Min%100/10];
 485   3                                                              R_DBUF4=Digit_Tab[R_Data_Min%10];                       
 486   3                                                      break;
 487   3                                              case D_SetMode_V1:
 488   3                                                              R_DBUF1=Digit_Tab[R_Data_V1/1000];
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 9   

 489   3                                                              R_DBUF2=Digit_Tab[R_Data_V1%1000/100];
 490   3                                                              R_DBUF3=Digit_Tab[R_Data_V1%100/10];
 491   3                                                              R_DBUF4=Digit_Tab[R_Data_V1%10];                        
 492   3                                                      break;                  
 493   3                                              case D_SetMode_V2:
 494   3                                                                      R_DBUF1=Digit_Tab[R_Data_V2/1000];
 495   3                                                                      R_DBUF2=Digit_Tab[R_Data_V2%1000/100];
 496   3                                                                      R_DBUF3=Digit_Tab[R_Data_V2%100/10];
 497   3                                                                      R_DBUF4=Digit_Tab[R_Data_V2%10];
 498   3                                                                      
 499   3                                                                      //--------------小数点显示--------------
 500   3                                                                      switch(R_NT_V2)
 501   3                                                                      {
 502   4                                                                              case 1:
 503   4                                                                                      R_DBUF1|=H_SEG;
 504   4                                                                                      break;
 505   4                                                                              case 2:
 506   4                                                                                      R_DBUF2|=H_SEG;
 507   4                                                                                      break;
 508   4                                                                              case 3:
 509   4                                                                                      R_DBUF3|=H_SEG;
 510   4                                                                                      break;                                                                                                                  
 511   4                                                                      }
 512   3                              
 513   3                                                      break;
 514   3                                              case D_SetMode_K:
 515   3                                                                      R_DBUF1=Digit_Tab[R_Data_K/1000];
 516   3                                                                      R_DBUF2=Digit_Tab[R_Data_K%1000/100];
 517   3                                                                      R_DBUF3=Digit_Tab[R_Data_K%100/10];
 518   3                                                                      R_DBUF4=Digit_Tab[R_Data_K%10];
 519   3                                                                      
 520   3                                                                      //--------------小数点显示--------------
 521   3                                                                      switch(R_NT_K)
 522   3                                                                      {
 523   4                                                                              case 1:
 524   4                                                                                      R_DBUF1|=H_SEG;
 525   4                                                                                      break;
 526   4                                                                              case 2:
 527   4                                                                                      R_DBUF2|=H_SEG;
 528   4                                                                                      break;
 529   4                                                                              case 3:
 530   4                                                                                      R_DBUF3|=H_SEG;
 531   4                                                                                      break;                                                                                                                  
 532   4                                                                      }                                               
 533   3                                                      break;  
 534   3                                              case D_SetMode_Frc:
 535   3                                                              R_DBUF1=Digit_Tab[R_Data_Frc/1000];
 536   3                                                              R_DBUF2=Digit_Tab[R_Data_Frc%1000/100];
 537   3                                                              R_DBUF3=Digit_Tab[R_Data_Frc%100/10];
 538   3                                                              R_DBUF4=Digit_Tab[R_Data_Frc%10];                       
 539   3                                                      break;
 540   3                                              case D_SetMode_TV:
 541   3                                                                      R_DBUF1=Digit_Tab[(u16)R_Data_TV/1000];
 542   3                                                                      R_DBUF2=Digit_Tab[(u16)R_Data_TV%1000/100];
 543   3                                                                      R_DBUF3=Digit_Tab[(u16)R_Data_TV%100/10];
 544   3                                                                      R_DBUF4=Digit_Tab[(u16)R_Data_TV%10];
 545   3                                                                      
 546   3                                                                      //--------------小数点显示--------------
 547   3                                                                      switch(R_NT_TV)
 548   3                                                                      {
 549   4                                                                              case 1:
 550   4                                                                                      R_DBUF1|=H_SEG;
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 10  

 551   4                                                                                      break;
 552   4                                                                              case 2:
 553   4                                                                                      R_DBUF2|=H_SEG;
 554   4                                                                                      break;
 555   4                                                                              case 3:
 556   4                                                                                      R_DBUF3|=H_SEG;
 557   4                                                                                      break;                                                                                                                  
 558   4                                                                      }                       
 559   3                                                      break;  
 560   3                                              default:
 561   3                                                      break;                                                                          
 562   3                                      }
 563   2      
 564   2                                      if(R_DispTmUI==0)
 565   2                                              {
 566   3                                              if(Flg_AutoMode==0)
 567   3                                                      {
 568   4                                                      R_DBUF1=G_SEG;
 569   4                                                      R_DBUF2=G_SEG;
 570   4                                                      R_DBUF3=G_SEG;
 571   4                                                      R_DBUF4=G_SEG;  
 572   4                                                      }
 573   3                                                      else
 574   3                                                              {
 575   4                                                              if(R_Data_Min==0)       
 576   4                                                                      {
 577   5      //                                                              if(R_Data_Day/1000)
 578   5                                                                              R_DBUF1=Digit_Tab[R_Data_Day/1000];
 579   5      //                                                              if(R_Data_Day%1000/100)
 580   5                                                                              R_DBUF2=Digit_Tab[R_Data_Day%1000/100];
 581   5      //                                                              if(R_Data_Day%100/10)
 582   5                                                                              R_DBUF3=Digit_Tab[R_Data_Day%100/10];
 583   5                                                                      R_DBUF4=Digit_Tab[R_Data_Day%10];       
 584   5                                                                      }
 585   4                                                                      else
 586   4                                                                              {
 587   5      //                                                                      if(R_Data_Min/1000)
 588   5                                                                                      R_DBUF1=Digit_Tab[R_Data_Min/1000];
 589   5      //                                                                      if(R_Data_Min%1000/100)
 590   5                                                                                      R_DBUF2=Digit_Tab[R_Data_Min%1000/100];
 591   5      //                                                                      if(R_Data_Min%100/10)
 592   5                                                                                      R_DBUF3=Digit_Tab[R_Data_Min%100/10];
 593   5                                                                              R_DBUF4=Digit_Tab[R_Data_Min%10];       
 594   5                                                                              }
 595   4                                                              }
 596   3                                              
 597   3                                              if(Flg_ToAdd)
 598   3                                                      {
 599   4                                                      R_DBUF1=Digit_Tab[(u16)R_Data_TV/1000];
 600   4                                                      R_DBUF2=Digit_Tab[(u16)R_Data_TV%1000/100];
 601   4                                                      R_DBUF3=Digit_Tab[(u16)R_Data_TV%100/10];
 602   4                                                      R_DBUF4=Digit_Tab[(u16)R_Data_TV%10];                                                   
 603   4                                                      }                               
 604   3                                              }
 605   2                                              else
 606   2                                                      {
 607   3                                                      R_DBUF5=Mode_Tab[R_SetMode];//LED指示灯显示             
 608   3                                                      }
 609   2                                      
 610   2                                      if(Flg_SetMode&&Flg_500MsFlash)
 611   2                                              {
 612   3                                              R_DBUF5=0;      
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 11  

 613   3                                              }                       
 614   2                              break;
 615   2                      case D_WkMode_Error:
 616   2                                      if(Flg_500MsFlash)
 617   2                                              {
 618   3                                              break;  
 619   3                                              }
 620   2                                      R_DBUF1=0;
 621   2                                      R_DBUF2=DT_E;
 622   2                                      R_DBUF3=Digit_Tab[R_Protect];
 623   2                                      R_DBUF4=0;                      
 624   2                              break;
 625   2                      default:
 626   2                              break;                                                                          
 627   2              }       
 628   1      
 629   1              Flg_DispOK=1;                                   
 630   1      }                                       
 631          
 632          //-------------------------------------------
 633          /*---------------20毫秒计时子程序------------
 634          //--------------------------------------------
 635          /输入：需要计时的变量
 636          /输出：个变量预算后的结果
 637          /备注：放在2毫米分时中调用
 638          /       计时单位有：20ms，500ms，1S
 639          */
 640          //-------------------------------------------
 641          void    Timer50msCnt()
 642          {
 643   1              static char R_500msCnt,R_100msCnt;              
 644   1              R_500msCnt++;
 645   1              R_100msCnt++;
 646   1      
 647   1      CALL_isr_UART1();
 648   1      //      R_PinCnt=5;     
 649   1      //----------计时50ms------------------------------------                
 650   1              {
 651   2              if(R_100msCnt==5)
 652   2                      {
 653   3                      R_100msCnt=0;
 654   3                      
 655   3                      }       
 656   2                              
 657   2              }
 658   1              if(R_RlDelayOpen)
 659   1                      {
 660   2                      R_RlDelayOpen--;
 661   2                      if(R_RlDelayOpen==0)
 662   2                              {
 663   3                              Flg_RelayWk2=1;
 664   3                              Flg_RelayWkBak2=1;      
 665   3                              }       
 666   2                      }
 667   1      //----------计时20ms---END---------------------------------     
 668   1                      if(Flg_Second)
 669   1                              {
 670   2                              Flg_Second=0;
 671   2                              R_SecondDS++;
 672   2                              if(R_SecondDS==60)
 673   2                                      {
 674   3                                      R_SecondDS=0;
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 12  

 675   3                                      if(R_CheckOutTm)
 676   3                                              {
 677   4                                              if(Flg_ToAdd==0)//停止加注时，开始计时2小时
 678   4                                                      {
 679   5                                                      R_CheckOutTm--; 
 680   5                                                      if(R_CheckOutTm==0)
 681   5                                                              {
 682   6                                                              R_AddPluseCnt=0;        
 683   6                                                              }       
 684   5                                                      }
 685   4                                              }       
 686   3                                      if(R_RelayWkTmON)
 687   3                                              {
 688   4                                              R_RelayWkTmON--;
 689   4                                              if(R_RelayWkTmON==0)
 690   4                                                      {
 691   5                                                      R_RelayWkTmOFF=10;      
 692   5                                                      }       
 693   4                                              }
 694   3                                      if(R_RelayWkTmOFF)
 695   3                                              {
 696   4                                              R_RelayWkTmOFF--;
 697   4                                              if(R_RelayWkTmOFF==0)
 698   4                                                      {
 699   5                                                      R_RelayWkTmON=10;       
 700   5                                                      }                                               
 701   4                                              }                                                                                       
 702   3                                      if(Flg_AutoMode)//自动模式下，时间倒计时
 703   3                                              {
 704   4                                              if(R_Data_Min)
 705   4                                                      {
 706   5                                                      R_Data_Min--;
 707   5                                                      if(R_Data_Min==0)
 708   5                                                              {
 709   6                                                              if(R_Data_Day)
 710   6                                                                      {
 711   7                                                                      R_Data_Day--;
 712   7                                                                      R_Data_Min=1439;        
 713   7                                                                      }       
 714   6                                                              }       
 715   5                                                      }
 716   4                                                      else
 717   4                                                              {
 718   5                                                              if(R_Data_Day)
 719   5                                                                      {
 720   6                                                                      R_Data_Day--;
 721   6                                                                      R_Data_Min=1439;        
 722   6                                                                      }                                                               
 723   5                                                              }
 724   4                                              }
 725   3                                      }                                       
 726   2                              }
 727   1      //----------计时500ms------------------------------------       
 728   1              if(R_500msCnt == 25)
 729   1                      {
 730   2                      R_500msCnt=0;   
 731   2      //----------此段为500ms------------------------------------
 732   2      
 733   2                      Flg_500MsFlash=!Flg_500MsFlash; 
 734   2      //              R_TxCnt=TxUART_Tab[2];
 735   2      
 736   2      //----------计时1s------------------------------------
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 13  

 737   2                                      
 738   2                      if(Flg_500MsFlash)
 739   2                              {
 740   3                                      
 741   3                              if(R_AddTimer <500)
 742   3                                      {
 743   4                                      R_AddTimer++;   
 744   4                                      }       
 745   3                              if(R_ExitSetTm)
 746   3                                      {
 747   4                                      R_ExitSetTm--;
 748   4                                      if(R_ExitSetTm==0)
 749   4                                              {
 750   5                                              Flg_SetMode=0;  
 751   5                                              }       
 752   4                                      }
 753   3                              if(R_DispTmUI)
 754   3                                      {
 755   4                                      R_DispTmUI--;   
 756   4                                      }       
 757   3                              if(R_DelaySave)
 758   3                                      {
 759   4                                      R_DelaySave--;
 760   4                                      if(R_DelaySave==0)
 761   4                                              {
 762   5                                              Flg_ToErrom=1;  
 763   5                                              }       
 764   4                                      }                       
 765   3      //                      R_Second++;
 766   3      
 767   3      //                      if(R_Second==60)
 768   3      //                              {
 769   3      //                              R_Second=0;
 770   3      //
 771   3      //                              
 772   3      //                              R_Minute++;
 773   3      //                              if(R_Minute==60)
 774   3      //                                      {
 775   3      //                                      R_Minute=0;
 776   3      //                                      R_Hour++;
 777   3      //                                      if(R_Hour==24)
 778   3      //                                              {
 779   3      //                                              R_Hour=0;       
 780   3      //                                              }
 781   3      //              
 782   3      //                                      }       
 783   3      //                              }
 784   3                      
 785   3      //------        ----此段为1s------------------------------------                        
 786   3                      
 787   3                              }               
 788   2      //----------计时1s---END---------------------------------                                       
 789   2                      }
 790   1                      if(Flg_AutoMode)//自动模式下，判断时间
 791   1                              {
 792   2                              if((R_Data_Day==0)&&(R_Data_Min==0)&&(Flg_ToAdd==0))
 793   2                                      {
 794   3                                      Flg_RelayWk1=1;
 795   3                                      R_RelayWkTmON=10;       //继电器工作10分钟
 796   3                                      Flg_RelayWkBak1=1;
 797   3                                      R_RlDelayOpen=25;
 798   3                                      R_AddPluseCnt=0;//开始加注，计数清零
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 14  

 799   3                                      Flg_ToAdd=1;
 800   3                                      R_AddTimer=0;   //5分钟报警时间清零     
 801   3                                      
 802   3                                      R_Data_Day=R_Data_DayBak;//重新加载设置时间
 803   3                                      R_Data_Min=R_Data_MinBak;
 804   3                                      R_AddPluseCnt=0;                        //脉冲计数清零
 805   3                                      }       
 806   2                              }
 807   1      //----------计时500ms--END----------------------------------
 808   1      
 809   1                              
 810   1                              
 811   1      }
 812          //-------------------------------------------
 813          /*---------------公式计算子程序------------
 814          //--------------------------------------------
 815          /输入：
 816          /输出：
 817          /备注：
 818          /
 819          */
 820          //-------------------------------------------   
 821          void Calculate()
 822          {
 823   1      
 824   1      //      R_AddPluseBak=((double)R_Data_V1*1000*10+(double)R_Data_V2)*1000;
 825   1              switch(R_NT_K)
 826   1              {
 827   2                      case 0:
 828   2      R_DataTmp_TV=((double)R_Cl_P*(double)R_PluseCnt*(double)R_Data_K/1000/100);//;//P*NT*K/1000  （单位升）
 829   2      //R_Data_Add=((double)R_Cl_P*(double)R_PluseCnt*(double)R_Data_K/100);
 830   2              switch(R_NT_V2)
 831   2              {
 832   3                      case 0://----------------------------L---V2----------------------P-K-----------------------------------V
             -2
 833   3                              R_AddPluseBak=((double)R_Data_V1*1000*1+(double)R_Data_V2)*100*1/((double)R_Cl_P*(double)R_Data_K)/1;
 834   3                              break;
 835   3                      case 1://----------------------------L-----V2----------------------P--K---------------------------------
             ------V2
 836   3                              R_AddPluseBak=((double)R_Data_V1*1000*1000+(double)R_Data_V2)*100*1/((double)R_Cl_P*(double)R_Data_K)/1
             -000;
 837   3                              break;  
 838   3                      case 2://----------------------------L-----V2---------------------P--K----------------------------------
             -----V2
 839   3                              R_AddPluseBak=((double)R_Data_V1*1000*100+(double)R_Data_V2)*100*1/((double)R_Cl_P*(double)R_Data_K)/10
             -0;
 840   3                              break;
 841   3                      case 3://----------------------------L-----V2--------------------P--K-----------------------------------
             ---V2
 842   3                              R_AddPluseBak=((double)R_Data_V1*1000*10+(double)R_Data_V2)*100*1/((double)R_Cl_P*(double)R_Data_K)/10;
 843   3                              break;
 844   3                      default:
 845   3                              break;                                                                                  
 846   3              }
 847   2                              break;
 848   2                      case 1:
 849   2      R_DataTmp_TV=((double)R_Cl_P*(double)R_PluseCnt*(double)R_Data_K/1000/100/1000);//P*NT*K/1000  （单位升）
 850   2              switch(R_NT_V2)
 851   2              {
 852   3                      case 0://----------------------------L---V2----------------------P---K----------------------------------
             --V2
 853   3                              R_AddPluseBak=((double)R_Data_V1*1000*1+(double)R_Data_V2)*100*1000/((double)R_Cl_P*(double)R_Data_K)/1
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 15  

             -;
 854   3                              break;
 855   3                      case 1://----------------------------L-----V2----------------------P---K--------------------------------
             -------V2
 856   3                              R_AddPluseBak=((double)R_Data_V1*1000*1000+(double)R_Data_V2)*100*1000/((double)R_Cl_P*(double)R_Data_K
             -)/1000;
 857   3                              break;  
 858   3                      case 2://----------------------------L-----V2---------------------P---K---------------------------------
             ------V2
 859   3                              R_AddPluseBak=((double)R_Data_V1*1000*100+(double)R_Data_V2)*100*1000/((double)R_Cl_P*(double)R_Data_K)
             -/100;
 860   3                              break;
 861   3                      case 3://----------------------------L-----V2--------------------P---K----------------------------------
             ----V2
 862   3                              R_AddPluseBak=((double)R_Data_V1*1000*10+(double)R_Data_V2)*100*1000/((double)R_Cl_P*(double)R_Data_K)/
             -10;
 863   3                              break;
 864   3                      default:
 865   3                              break;                                                                                  
 866   3              }
 867   2                              break;
 868   2                      case 2:
 869   2      R_DataTmp_TV=((double)R_Cl_P*(double)R_PluseCnt*(double)R_Data_K/1000/100/100);//P*NT*K/1000  （单位升）
 870   2              switch(R_NT_V2)
 871   2              {
 872   3                      case 0://----------------------------L---V2----------------------P--K-----------------------------------
             -V2
 873   3                              R_AddPluseBak=((double)R_Data_V1*1000*1+(double)R_Data_V2)*100*100/((double)R_Cl_P*(double)R_Data_K)/1;
 874   3                              break;
 875   3                      case 1://----------------------------L-----V2----------------------P---K--------------------------------
             -------V2
 876   3                              R_AddPluseBak=((double)R_Data_V1*1000*1000+(double)R_Data_V2)*100*100/((double)R_Cl_P*(double)R_Data_K)
             -/1000;
 877   3                              break;  
 878   3                      case 2://----------------------------L-----V2---------------------P---K---------------------------------
             ------V2
 879   3                              R_AddPluseBak=((double)R_Data_V1*1000*100+(double)R_Data_V2)*100*100/((double)R_Cl_P*(double)R_Data_K)/
             -100;
 880   3                              break;
 881   3                      case 3://----------------------------L-----V2--------------------P---K----------------------------------
             ----V2
 882   3                              R_AddPluseBak=((double)R_Data_V1*1000*10+(double)R_Data_V2)*100*100/((double)R_Cl_P*(double)R_Data_K)/1
             -0;
 883   3                              break;
 884   3                      default:
 885   3                              break;                                                                                  
 886   3              }
 887   2                              break;
 888   2                      case 3:
 889   2      R_DataTmp_TV=((double)R_Cl_P*(double)R_PluseCnt*(double)R_Data_K/1000/100/10);//P*NT*K/1000  （单位升）
 890   2              switch(R_NT_V2)
 891   2              {
 892   3                      case 0://----------------------------L---V2----------------------P-K-----------------------------------V
             -2
 893   3                              R_AddPluseBak=((double)R_Data_V1*1000*1+(double)R_Data_V2)*100*10/((double)R_Cl_P*(double)R_Data_K)/1;
 894   3                              break;
 895   3                      case 1://----------------------------L-----V2----------------------P--K---------------------------------
             ------V2
 896   3                              R_AddPluseBak=((double)R_Data_V1*1000*1000+(double)R_Data_V2)*100*10/((double)R_Cl_P*(double)R_Data_K)/
             -1000;
 897   3                              break;  
 898   3                      case 2://----------------------------L-----V2---------------------P--K----------------------------------
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 16  

             -----V2
 899   3                              R_AddPluseBak=((double)R_Data_V1*1000*100+(double)R_Data_V2)*100*10/((double)R_Cl_P*(double)R_Data_K)/1
             -00;
 900   3                              break;
 901   3                      case 3://----------------------------L-----V2--------------------P--K-----------------------------------
             ---V2
 902   3                              R_AddPluseBak=((double)R_Data_V1*1000*10+(double)R_Data_V2)*100*10/((double)R_Cl_P*(double)R_Data_K)/10
             -;
 903   3                              break;
 904   3                      default:
 905   3                              break;                                                                                  
 906   3              }
 907   2                              break;
 908   2                      default: 
 909   2                              break;                                                                          
 910   2                                      
 911   2              }
 912   1              R_NT_TV=0;
 913   1              if(R_DataTmp_TV<10)
 914   1                      {
 915   2                      R_DataTmp_TV=R_DataTmp_TV*1000;
 916   2                      R_Data_TV=R_DataTmp_TV; 
 917   2                      R_NT_TV=1;      
 918   2                      }
 919   1                      else if((R_DataTmp_TV<100)&&(R_DataTmp_TV>=10))
 920   1                              {
 921   2                              R_DataTmp_TV=R_DataTmp_TV*100;
 922   2                              R_Data_TV=R_DataTmp_TV; 
 923   2                              R_NT_TV=2;      
 924   2                              }
 925   1                      else if((R_DataTmp_TV<1000)&&(R_DataTmp_TV>=100))
 926   1                              {
 927   2                              R_DataTmp_TV=R_DataTmp_TV*10;
 928   2                              R_Data_TV=R_DataTmp_TV;         
 929   2                              R_NT_TV=3;
 930   2                              }
 931   1                              else
 932   1                                      {
 933   2                                      if(R_DataTmp_TV<=9999)
 934   2                                              R_Data_TV=R_DataTmp_TV; 
 935   2                                              else
 936   2                                                      {
 937   3                                                      R_Data_TV=9999;         
 938   3                                                      }
 939   2                                      }
 940   1                                                      
 941   1              if(R_AddPluseCnt>=R_AddPluseBak)//加注完成，关闭继电器
 942   1                      {
 943   2                      if(Flg_RelayWk1)
 944   2                              {
 945   3                              R_CheckOutTm=120;       
 946   3                              }
 947   2                      Flg_RelayWk1=0;
 948   2                      Flg_RelayWkBak1=0;
 949   2                      Flg_RelayWk2=0; 
 950   2                      Flg_RelayWkBak2=0;
 951   2                      Flg_ToAdd=0;
 952   2                      R_AddPluseCnt=0;
 953   2                      }
 954   1      }
 955          //-------------------------------------------
 956          /*---------------串口发送数据处理子程序------------
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 17  

 957          //--------------------------------------------
 958          /输入：
 959          /输出：
 960          /备注：主循环中调用
 961          /
 962          */
 963          //-------------------------------------------
 964          void    SendData_UART()
 965          {
 966   1              TxUART_Tab[0]=0xff;
 967   1              TxUART_Tab[1]=0xff;     
 968   1              TxUART_Tab[2]=24;
 969   1              TxUART_Tab[3]=0;
 970   1              TxUART_Tab[4]=0x07;
 971   1      //----------------------
 972   1              TxUART_Tab[5]=2;        
 973   1      //----------------------                                
 974   1              TxUART_Tab[6]=0>>8;
 975   1              TxUART_Tab[7]=0;
 976   1      //----------------------                                
 977   1              TxUART_Tab[8]=0>>8;
 978   1              TxUART_Tab[9]=0;
 979   1      //----------------------                        
 980   1              TxUART_Tab[10]=0>>8;
 981   1              TxUART_Tab[11]=0;
 982   1      //----------------------                                
 983   1              TxUART_Tab[12]=0>>8;
 984   1              TxUART_Tab[13]=0;
 985   1              TxUART_Tab[14]=0;       
 986   1      //----------------------                                
 987   1              TxUART_Tab[15]=0>>8;
 988   1              TxUART_Tab[16]=0;
 989   1              TxUART_Tab[17]=0;       
 990   1      //----------------------                                
 991   1              TxUART_Tab[18]=0>>8;
 992   1              TxUART_Tab[19]=0;
 993   1      //----------------------                                
 994   1              TxUART_Tab[20]=0>>8;
 995   1              TxUART_Tab[21]=0;
 996   1              TxUART_Tab[22]=0;
 997   1                      
 998   1              TxUART_Tab[23]=TxUART_Tab[0]+TxUART_Tab[1]+TxUART_Tab[2]+TxUART_Tab[3]+TxUART_Tab[4];
 999   1              TxUART_Tab[23]+=TxUART_Tab[5]+TxUART_Tab[6]+TxUART_Tab[7]+TxUART_Tab[8]+TxUART_Tab[9];
1000   1              TxUART_Tab[23]+=TxUART_Tab[10]+TxUART_Tab[11]+TxUART_Tab[12]+TxUART_Tab[13]+TxUART_Tab[14];     
1001   1              TxUART_Tab[23]+=TxUART_Tab[15]+TxUART_Tab[16]+TxUART_Tab[17]+TxUART_Tab[18]+TxUART_Tab[19];
1002   1              TxUART_Tab[23]+=TxUART_Tab[20]+TxUART_Tab[21]+TxUART_Tab[22];                   
1003   1      }
1004          //-------------------------------------------
1005          /*---------------串口接收数据处理子程序------------
1006          //--------------------------------------------
1007          /输入：
1008          /输出：
1009          /备注：主循环中调用
1010          /
1011          */
1012          //-------------------------------------------
1013          void    RecData_UART()
1014          {
1015   1      //      if(Flg_StartUART)
1016   1      //              {
1017   1      //              return; 
1018   1      //              }
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 18  

1019   1      
1020   1              if(RxUART_Tab[1]==0)
1021   1                      {
1022   2                      return; 
1023   2                      }
1024   1      //      if(RxUART_Tab[0]!=R_MachCnt)
1025   1      //              {
1026   1      //              return;         
1027   1      //              }
1028   1              switch(RxUART_Tab[1]&0x0f)
1029   1              {
1030   2                      case 0x01://
1031   2      
1032   2                              break;
1033   2                      case 0x02://
1034   2      
1035   2                                                      
1036   2                              break;
1037   2                      case 0x03://
1038   2      
1039   2                              break;
1040   2                      case 0x04://
1041   2                      
1042   2                              break;
1043   2                      case 0x05://
1044   2              
1045   2                              break;
1046   2                      case 0x06://
1047   2              
1048   2                              break;
1049   2                      case 0x07:
1050   2                                      SendData_UART();
1051   2                              break;
1052   2                      default:                        
1053   2                              break;                                                          
1054   2              }
1055   1      
1056   1              CALL_isr_UART1();       //发送ACK
1057   1              ClearData_UART(1);      
1058   1      }
1059          //-------------------------------------------
1060          /*---------------UART数据处理子程序------------
1061          //--------------------------------------------
1062          /输入：
1063          /输出：
1064          /备注：主循环中调用
1065          /
1066          */
1067          //-------------------------------------------
1068          void    ClearData_UART(bit Flg_Sta)//Flg_Sta=1接收数据缓存清零，Flg_Sta=0发送数据缓存清零
1069          {
1070   1              u8 i;
1071   1              
1072   1              for(i=0;i<6;i++)
1073   1                      {
1074   2                      if(Flg_Sta)
1075   2                              RxUART_Tab[i]=0;
1076   2                              else
1077   2                                      {
1078   3                                      TxUART_Tab[i]=0;        
1079   3                                      }               
1080   2                      }       
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 19  

1081   1      }
1082          //-------------------------------------------
1083          /*---------------按键处理子程序------------
1084          //--------------------------------------------
1085          /输入：按键产生标志Flg_HaveKey，按键键值R_CurKey，双击键产生标志FLG_keyDouble，
1086          /       按键未释放标志FLG_keymark,长按键产生标志Flg_LongKey
1087          /输出：各个按键功能
1088          /备注：主循环中调用
1089          /
1090          */
1091          //-------------------------------------------
1092          void    DealKey()//放在主循环中执行
1093          {
1094   1              u8      R_BottomMode=0;
1095   1              if(Flg_HaveKey == 0)
1096   1                      {
1097   2                      return; 
1098   2                      }
1099   1                      Flg_HaveKey=0;  
1100   1                      R_DelaySave=3;  
1101   1                       R_BottomMode = R_CurKey;
1102   1                      R_DispTmUI=D_DispTmUI;  
1103   1                       switch(R_BottomMode)
1104   1                              {
1105   2                              case D_keyUp:   
1106   2                                                      
1107   2                                          if(Flg_SetMode)
1108   2                                              {
1109   3                                      switch(R_SetMode)
1110   3                                      {
1111   4                                              case 0:
1112   4                                                              if(R_MachCnt<255)
1113   4                                                                      R_MachCnt++;    
1114   4                                                      break;      
1115   4                                              case D_SetMode_Mode:
1116   4                                                              Flg_AutoMode=1;
1117   4                                                              R_Data_Day=0,R_Data_Min=60;
1118   4                                                              R_Data_DayBak,R_Data_MinBak=60;
1119   4                                                              
1120   4                                                                                      Flg_RelayWk1=1;
1121   4                                                                                      Flg_RelayWkBak1=1;
1122   4                                                                                      R_RelayWkTmON=10;       //继电器工作10分钟
1123   4                                                                                      R_RlDelayOpen=25;       //延时500毫秒
1124   4                                                                                      R_AddPluseCnt=0;//开始加注，计数清零
1125   4                                                                                      Flg_ToAdd=1;
1126   4                                                                                      R_AddTimer=0;   //5分钟报警时间清零                                                             
1127   4                                                      break;
1128   4                                              case D_SetMode_Day:
1129   4                                                                                      if(FLG_keymark)
1130   4                                                                                              {
1131   5                                                                                              if(R_Data_Day<9999-10)
1132   5                                                                      {
1133   6                                                                      R_Data_Day+=10;         
1134   6                                                                      }       
1135   5                                                                      else
1136   5                                                                              {
1137   6                                                                              if(R_Data_Day<9999)
1138   6                                                                                      {
1139   7                                                                                      R_Data_Day++;   
1140   7                                                                                      }       
1141   6                                                                              }
1142   5                                                                                              }
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 20  

1143   4                                                                                              else
1144   4                                                                                                      {
1145   5                                                                                                       if(R_Data_Day<9999)
1146   5                                                                              {
1147   6                                                                              R_Data_Day++;   
1148   6                                                                              }       
1149   5                                                                                                      }                                               
1150   4                                                     
1151   4      //                                              R_Data_MinTmp=1439;     
1152   4                                                      R_Data_DayBak=R_Data_Day;     
1153   4                                                      break;                  
1154   4                                      
1155   4                                              case D_SetMode_Min:
1156   4      
1157   4                                                                                      if(FLG_keymark)
1158   4                                                                                              {
1159   5                                                                                              if(R_Data_Min<1439-10)
1160   5                                                                      {
1161   6                                                                      R_Data_Min+=10;         
1162   6                                                                      }       
1163   5                                                                      else
1164   5                                                                              {
1165   6                                                                              if(R_Data_Min<1439)
1166   6                                                                                      {
1167   7                                                                                      R_Data_Min++;   
1168   7                                                                                      }       
1169   6                                                                              }
1170   5                                                                                              }
1171   4                                                                                              else
1172   4                                                                                                      {
1173   5                                                                                                       if(R_Data_Min<1439)
1174   5                                                                              {
1175   6                                                                              R_Data_Min++;   
1176   6                                                                              }       
1177   5                                                                                                      }
1178   4      //                                                                              R_Data_MinTmp=1439;                                                                         
1179   4                                                      R_Data_MinBak=R_Data_Min;                               
1180   4                                                      break;
1181   4                                              case D_SetMode_V1:
1182   4                                                      if(R_Data_V1<100)
1183   4                                                          R_Data_V1++;                                
1184   4                                                      break;                  
1185   4                                              case D_SetMode_V2:
1186   4      //                                                      R_Data_V2++;
1187   4                                                              if(FLG_keymark)
1188   4                                                                      {
1189   5                                                                      R_Data_V2+=10;  
1190   5                                                                      }
1191   4                                                                      else
1192   4                                                                              {
1193   5                                                                              R_Data_V2++;    
1194   5                                                                              }                                                       
1195   4                                                                                      switch(R_NT_V2)
1196   4                                                                                      {
1197   5                                                                                              case 0:
1198   5                      
1199   5                                                                                                      break;                                                                                  
1200   5                                                                                              case 1:
1201   5                                                                                                      if(R_Data_V2>=10000)
1202   5                                                                                                              {
1203   6                                                                                                              R_NT_V2=2;
1204   6                                                                                                              R_Data_V2=1000; 
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 21  

1205   6                                                                                                              }
1206   5                                                                                                      break;
1207   5                                                                                              case 2:
1208   5                                                                                                      if(R_Data_V2>=10000)
1209   5                                                                                                              {
1210   6                                                                                                              R_NT_V2=3;
1211   6                                                                                                              R_Data_V2=1000; 
1212   6                                                                                                              }
1213   5                                                                                                      break;
1214   5                                                                                              case 3:
1215   5                                                                                                      if(R_Data_V2>=9999)
1216   5                                                                                                              {
1217   6                                                                                                              R_NT_V2=3;
1218   6                                                                                                              R_Data_V2=9999; 
1219   6                                                                                                              }
1220   5                                                                                                      break;                                                                                                                  
1221   5                                                                                      }                                               
1222   4       
1223   4                                                      break;
1224   4                                              case D_SetMode_K:
1225   4                                                              if(FLG_keymark)
1226   4                                                                      {
1227   5                                                                      R_Data_K+=10;   
1228   5                                                                      }
1229   4                                                                      else
1230   4                                                                              {
1231   5                                                                              R_Data_K++;     
1232   5                                                                              }
1233   4                                                                                      switch(R_NT_K)
1234   4                                                                                      {
1235   5                                                                                              case 0:
1236   5                                                                                                      
1237   5                                                                                                      if(R_Data_K>=9999)
1238   5                                                                                                              {
1239   6                                                                                                              R_NT_K=0;
1240   6                                                                                                              R_Data_K=9999;  
1241   6                                                                                                              }               
1242   5                                                                                                      break;                                                                                  
1243   5                                                                                              case 1:
1244   5                                                                                                      if(R_Data_K>=10000)
1245   5                                                                                                              {
1246   6                                                                                                              R_NT_K=2;
1247   6                                                                                                              R_Data_K=1000;  
1248   6                                                                                                              }
1249   5                                                                                                      break;
1250   5                                                                                              case 2:
1251   5                                                                                                      if(R_Data_K>=10000)
1252   5                                                                                                              {
1253   6                                                                                                              R_NT_K=3;
1254   6                                                                                                              R_Data_K=1000;  
1255   6                                                                                                              }
1256   5                                                                                                      break;
1257   5                                                                                              case 3:
1258   5                                                                                                      if(R_Data_K>=9999)
1259   5                                                                                                              {
1260   6                                                                                                              R_NT_K=0;
1261   6                                                                                                              R_Data_K=1000;  
1262   6                                                                                                              }
1263   5                                                                                                      break;                                                                                                                  
1264   5                                                                                      }                                                       
1265   4                                      
1266   4                                                      break;  
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 22  

1267   4                                              case D_SetMode_Frc:
1268   4      
1269   4                                                                                      if(FLG_keymark)
1270   4                                                                                              {
1271   5                                                                                              if(R_Data_Frc<1000-10)
1272   5                                                                      {
1273   6                                                                      R_Data_Frc+=10;         
1274   6                                                                      }       
1275   5                                                                      else
1276   5                                                                              {
1277   6                                                                              if(R_Data_Frc<1000)
1278   6                                                                                      {
1279   7                                                                                      R_Data_Frc++;   
1280   7                                                                                      }       
1281   6                                                                              }
1282   5                                                                                              }
1283   4                                                                                              else
1284   4                                                                                                      {
1285   5                                                                                                       if(R_Data_Frc<1000)
1286   5                                                                              {
1287   6                                                                              R_Data_Frc++;   
1288   6                                                                              }       
1289   5                                                                                                      }                                                                                               
1290   4                                                      break;
1291   4                                              case D_SetMode_TV:
1292   4                                              
1293   4                                                      break;  
1294   4                                              default:
1295   4                                                      break;                                                                          
1296   4                                      }
1297   3                                      R_ExitSetTm=10;                                         
1298   3                                              }
1299   2                                              else
1300   2                                                  {
1301   3                                                                      EnableLongKeyS(2);
1302   3                                                                      if(Flg_LongKey==0)
1303   3                                                                              {
1304   4                                                                              Flg_EnableRelease=1;
1305   4                                                                              if(Flg_KeyRelease==0)   
1306   4                                                                              break;  
1307   4                                                                              }
1308   3                                                                      if(Flg_LongKey)//长按键响应
1309   3                                                                              {
1310   4                                                                              if(Flg_AutoMode==0)//手动模式下，长按加减键，进入加注
1311   4                                                                                      {
1312   5                                                                                      Flg_RelayWk1=1;
1313   5                                                                                      Flg_RelayWkBak1=1;
1314   5                                                                                      R_RelayWkTmON=10;       //继电器工作10分钟
1315   5                                                                                      R_RlDelayOpen=25;       //延时500毫秒
1316   5                                                                                      R_AddPluseCnt=0;//开始加注，计数清零
1317   5                                                                                      Flg_ToAdd=1;
1318   5                                                                                      R_AddTimer=0;   //5分钟报警时间清零             
1319   5                                                                                      }
1320   4                                                                              }
1321   3                                                                              else//释放键响应
1322   3                                                                                      {
1323   4                                                               R_SetMode++; 
1324   4                                                               if(R_SetMode==9)
1325   4                                                                      {
1326   5                                                                      R_SetMode=0;    
1327   5                                                                      }  
1328   4                                                                                      }
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 23  

1329   3                                                                      Flg_LongKey=0;  
1330   3                                                                      Flg_KeyRelease=0;                                                       
1331   3      
1332   3                                                  }                   
1333   2                                      break;
1334   2      
1335   2                              case D_keyDown:
1336   2                                          if(Flg_SetMode)
1337   2                                              {
1338   3                                      switch(R_SetMode)
1339   3                                      {
1340   4                                              case 0:
1341   4                                                              if(R_MachCnt>1)
1342   4                                                                      R_MachCnt--;                                            
1343   4                                                      break;      
1344   4                                              case D_SetMode_Mode:
1345   4                                                              Flg_AutoMode=0;
1346   4                                                              
1347   4                                                              Flg_RelayWk1=0;
1348   4                                                              Flg_RelayWkBak1=0;
1349   4                                                              Flg_RelayWk2=0;
1350   4                                                              Flg_RelayWkBak2=0;
1351   4                                                      break;
1352   4                                              case D_SetMode_Day:
1353   4      //                                              if(R_Data_Day)
1354   4      //                                                  R_Data_Day--; 
1355   4                                                      if(R_Data_Day>10)
1356   4                                                              {
1357   5                                                              if(FLG_keymark)
1358   5                                                                      {
1359   6                                                                       R_Data_Day-=10;        
1360   6                                                                      }
1361   5                                                                      else
1362   5                                                                              {
1363   6                                                                              if(R_Data_Day)
1364   6                                                                                      R_Data_Day--;   
1365   6                                                                              }       
1366   5                                                              }
1367   4                                                               else
1368   4                                                                      {
1369   5                                                                      if(R_Data_Day)
1370   5                                                                              R_Data_Day--;   
1371   5                                                                      }                                                   
1372   4                                                      R_Data_DayBak=R_Data_Day;        
1373   4                                                      break;                  
1374   4                                      
1375   4                                              case D_SetMode_Min:
1376   4      //                                              if(R_Data_Min)
1377   4      //                                                  R_Data_Min--; 
1378   4                                                      if(R_Data_Min>10)
1379   4                                                              {
1380   5                                                              if(FLG_keymark)
1381   5                                                                      {
1382   6                                                                       R_Data_Min-=10;        
1383   6                                                                      }
1384   5                                                                      else
1385   5                                                                              {
1386   6                                                                              if(R_Data_Min)
1387   6                                                                                      R_Data_Min--;   
1388   6                                                                              }       
1389   5                                                              }
1390   4                                                               else
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 24  

1391   4                                                                      {
1392   5                                                                      if(R_Data_Min)
1393   5                                                                              R_Data_Min--;   
1394   5                                                                      }                                                   
1395   4                                                      R_Data_MinBak=R_Data_Min;                               
1396   4                                                      break;
1397   4                                              case D_SetMode_V1:
1398   4                                                      if(R_Data_V1)
1399   4                                                          R_Data_V1--;                                
1400   4                                                      break;                  
1401   4                                              case D_SetMode_V2:
1402   4      //                                                      R_Data_V2--;
1403   4                                                                                      switch(R_NT_V2)
1404   4                                                                                      {
1405   5                                                                                              case 0:
1406   5                                                                      if(R_Data_V2>(999+10))
1407   5                                                                              {
1408   6                                                                              if(FLG_keymark)
1409   6                                                                                      {
1410   7                                                                                       R_Data_V2-=10;         
1411   7                                                                                      }
1412   6                                                                                      else
1413   6                                                                                              {
1414   7                                                                                              R_Data_V2--;    
1415   7                                                                                              }       
1416   6                                                                              }
1417   5                                                                               else
1418   5                                                                                      {
1419   6                                                                                      R_Data_V2--;    
1420   6                                                                                      }                                                                                                       
1421   5                                                                                                      if(R_Data_V2==999)
1422   5                                                                                                              {
1423   6                                                                                                              R_NT_V2=3;
1424   6                                                                                                              R_Data_V2=9999; 
1425   6                                                                                                              }               
1426   5                                                                                                      break;                                                                                  
1427   5                                                                                              case 1:
1428   5                                                                      if(R_Data_V2>(0+10))
1429   5                                                                              {
1430   6                                                                              if(FLG_keymark)
1431   6                                                                                      {
1432   7                                                                                       R_Data_V2-=10;         
1433   7                                                                                      }
1434   6                                                                                      else
1435   6                                                                                              {
1436   7                                                                                              R_Data_V2--;    
1437   7                                                                                              }       
1438   6                                                                              }
1439   5                                                                               else
1440   5                                                                                      {
1441   6                                                                                      R_Data_V2--;    
1442   6                                                                                      }                                                                                               
1443   5                                                                                                      if(R_Data_V2==0)
1444   5                                                                                                              {
1445   6                                                                                                              R_NT_V2=1;
1446   6                                                                                                              R_Data_V2=1;    
1447   6                                                                                                              }
1448   5                                                                                                      break;
1449   5                                                                                              case 2:
1450   5                                                                      if(R_Data_V2>(999+10))
1451   5                                                                              {
1452   6                                                                              if(FLG_keymark)
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 25  

1453   6                                                                                      {
1454   7                                                                                       R_Data_V2-=10;         
1455   7                                                                                      }
1456   6                                                                                      else
1457   6                                                                                              {
1458   7                                                                                              if(R_Data_V2)   
1459   7                                                                                                      R_Data_V2--;            
1460   7                                                                                              }       
1461   6                                                                              }
1462   5                                                                               else
1463   5                                                                                      {
1464   6                                                                                      if(R_Data_V2)   
1465   6                                                                                              R_Data_V2--;    
1466   6                                                                                      }                                                                                               
1467   5                                                                                                      if(R_Data_V2==999)
1468   5                                                                                                              {
1469   6                                                                                                              R_NT_V2=1;
1470   6                                                                                                              R_Data_V2=9999; 
1471   6                                                                                                              }
1472   5                                                                                                      break;
1473   5                                                                                              case 3:
1474   5                                                                      if(R_Data_V2>(999+10))
1475   5                                                                              {
1476   6                                                                              if(FLG_keymark)
1477   6                                                                                      {
1478   7                                                                                       R_Data_V2-=10;         
1479   7                                                                                      }
1480   6                                                                                      else
1481   6                                                                                              {
1482   7                                                                                              R_Data_V2--;    
1483   7                                                                                              }       
1484   6                                                                              }
1485   5                                                                               else
1486   5                                                                                      {
1487   6                                                                                      R_Data_V2--;    
1488   6                                                                                      }                                                                                               
1489   5                                                                                                      if(R_Data_V2==999)
1490   5                                                                                                              {
1491   6                                                                                                              R_NT_V2=2;
1492   6                                                                                                              R_Data_V2=9999; 
1493   6                                                                                                              }
1494   5                                                                                                      break;                                                                                                                  
1495   5                                                                                      } 
1496   4                                                      break;
1497   4                                              case D_SetMode_K:
1498   4      //                                                      R_Data_K--;
1499   4                                                                                      switch(R_NT_K)
1500   4                                                                                      {
1501   5                                                                                              case 0:
1502   5                                                                      if(R_Data_K>(999+10))
1503   5                                                                              {
1504   6                                                                              if(FLG_keymark)
1505   6                                                                                      {
1506   7                                                                                       R_Data_K-=10;  
1507   7                                                                                      }
1508   6                                                                                      else
1509   6                                                                                              {
1510   7                                                                                              R_Data_K--;     
1511   7                                                                                              }       
1512   6                                                                              }
1513   5                                                                               else
1514   5                                                                                      {
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 26  

1515   6                                                                                      R_Data_K--;     
1516   6                                                                                      }                                                                                               
1517   5                                                                                                      if(R_Data_K==999)
1518   5                                                                                                              {
1519   6                                                                                                              R_NT_K=3;
1520   6                                                                                                              R_Data_K=9999;  
1521   6                                                                                                              }               
1522   5                                                                                                      break;                                                                                  
1523   5                                                                                              case 1:
1524   5                                                                      if(R_Data_K>(0+10))
1525   5                                                                              {
1526   6                                                                              if(FLG_keymark)
1527   6                                                                                      {
1528   7                                                                                       R_Data_K-=10;  
1529   7                                                                                      }
1530   6                                                                                      else
1531   6                                                                                              {
1532   7                                                                                              if(R_Data_K)    
1533   7                                                                                                      R_Data_K--;     
1534   7                                                                                              }       
1535   6                                                                              }
1536   5                                                                               else
1537   5                                                                                      {
1538   6                                                                                      if(R_Data_K)    
1539   6                                                                                              R_Data_K--;     
1540   6                                                                                      }                                                                                               
1541   5                                                                                                      if(R_Data_K==0)
1542   5                                                                                                              {
1543   6                                                                                                              R_NT_K=1;
1544   6                                                                                                              R_Data_K=1;     
1545   6                                                                                                              }
1546   5                                                                                                      break;
1547   5                                                                                              case 2:
1548   5                                                                      if(R_Data_K>(999+10))
1549   5                                                                              {
1550   6                                                                              if(FLG_keymark)
1551   6                                                                                      {
1552   7                                                                                       R_Data_K-=10;  
1553   7                                                                                      }
1554   6                                                                                      else
1555   6                                                                                              {
1556   7                                                                                              R_Data_K--;     
1557   7                                                                                              }       
1558   6                                                                              }
1559   5                                                                               else
1560   5                                                                                      {
1561   6                                                                                      R_Data_K--;     
1562   6                                                                                      }                                                                                               
1563   5                                                                                                      if(R_Data_K==999)
1564   5                                                                                                              {
1565   6                                                                                                              R_NT_K=1;
1566   6                                                                                                              R_Data_K=9999;  
1567   6                                                                                                              }
1568   5                                                                                                      break;
1569   5                                                                                              case 3:
1570   5                                                                      if(R_Data_K>(999+10))
1571   5                                                                              {
1572   6                                                                              if(FLG_keymark)
1573   6                                                                                      {
1574   7                                                                                       R_Data_K-=10;  
1575   7                                                                                      }
1576   6                                                                                      else
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 27  

1577   6                                                                                              {
1578   7                                                                                              R_Data_K--;     
1579   7                                                                                              }       
1580   6                                                                              }
1581   5                                                                               else
1582   5                                                                                      {
1583   6                                                                                      R_Data_K--;     
1584   6                                                                                      }                                                                                               
1585   5                                                                                                      if(R_Data_K==999)
1586   5                                                                                                              {
1587   6                                                                                                              R_NT_K=2;
1588   6                                                                                                              R_Data_K=9999;  
1589   6                                                                                                              }
1590   5                                                                                                      break;                                                                                                                  
1591   5                                                                                      }                                       
1592   4                                                      break;  
1593   4                                              case D_SetMode_Frc:
1594   4                                                      if(R_Data_Frc>10)
1595   4                                                              {
1596   5                                                              if(FLG_keymark)
1597   5                                                                      {
1598   6                                                                       R_Data_Frc-=10;        
1599   6                                                                      }
1600   5                                                                      else
1601   5                                                                              {
1602   6                                                                              if(R_Data_Frc)
1603   6                                                                                      R_Data_Frc--;   
1604   6                                                                              }       
1605   5                                                              }
1606   4                                                               else
1607   4                                                                      {
1608   5                                                                      if(R_Data_Frc)
1609   5                                                                              R_Data_Frc--;   
1610   5                                                                      }                               
1611   4                                                      break;
1612   4                                              case D_SetMode_TV:
1613   4                                      
1614   4                                                      break;  
1615   4                                              default:
1616   4                                                      break;                                                                          
1617   4                                      }
1618   3                                      R_ExitSetTm=10;                                         
1619   3                                              }
1620   2                                              else
1621   2                                                  {
1622   3                                                                      EnableLongKeyS(2);
1623   3                                                                      if(Flg_LongKey==0)
1624   3                                                                              {
1625   4                                                                              Flg_EnableRelease=1;
1626   4                                                                              if(Flg_KeyRelease==0)   
1627   4                                                                              break;  
1628   4                                                                              }
1629   3                                                                      if(Flg_LongKey)//长按键响应
1630   3                                                                              {
1631   4                                                                              if(Flg_AutoMode==0)//手动模式下，长按加减键，进入加注
1632   4                                                                                      {
1633   5                                                                                      Flg_RelayWk1=1;
1634   5                                                                                      Flg_RelayWkBak1=1;
1635   5                                                                                      R_RelayWkTmON=10;       //继电器工作10分钟
1636   5                                                                                      R_RlDelayOpen=25;       //延时500毫秒
1637   5                                                                                      R_AddPluseCnt=0;//开始加注，计数清零
1638   5                                                                                      Flg_ToAdd=1;
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 28  

1639   5                                                                                      R_AddTimer=0;   //5分钟报警时间清零             
1640   5                                                                                      }                                                               
1641   4                                                                              }
1642   3                                                                              else//释放键响应
1643   3                                                                                      {
1644   4                                                               if(R_SetMode==0)
1645   4                                                                      {
1646   5                                                                      R_SetMode=8;    
1647   5                                                                      } 
1648   4                                                                      else
1649   4                                                                              {
1650   5                                                                              R_SetMode--;    
1651   5                                                                              }                                                                                       
1652   4                                                                                      }
1653   3                                                                      Flg_LongKey=0;  
1654   3                                                                      Flg_KeyRelease=0;                                                       
1655   3      
1656   3                                                  }
1657   2                                      break;
1658   2                                                                                                                              
1659   2                              case D_keyTimerSet:
1660   2      //                                              if(FLG_keymark)
1661   2      //                                                      {
1662   2      //                                                      break;  
1663   2      //                                                      }
1664   2      //                                              EnableDoubleKey();
1665   2      //                                              if(!FLG_keyDouble)
1666   2      //                                                      {
1667   2      //                                                      break;  
1668   2      //                                                      }
1669   2      //                                              FLG_keyDouble=0;
1670   2                                                      EnableLongKeyS(2);
1671   2                                                      if(Flg_LongKey==0)
1672   2                                                              {
1673   3      //                                                      Flg_EnableRelease=1;
1674   3      //                                                      if(Flg_KeyRelease==0)   
1675   3                                                              break;  
1676   3                                                              }
1677   2                                                      Flg_LongKey=0;  
1678   2                                                      R_ExitSetTm=10;
1679   2                              switch(R_SetMode)
1680   2                                  {
1681   3                                      case 0:
1682   3                                                      Flg_SetMode=!Flg_SetMode;
1683   3                                              break;      
1684   3                                      case D_SetMode_Mode:
1685   3                                                      Flg_SetMode=!Flg_SetMode;
1686   3                                              break;
1687   3                                      case D_SetMode_Day:
1688   3                                                      Flg_SetMode=!Flg_SetMode;                               
1689   3                                              break;                  
1690   3                                  
1691   3                                      case D_SetMode_Min:
1692   3                                                      Flg_SetMode=!Flg_SetMode;                               
1693   3                                              break;
1694   3                                      case D_SetMode_V1:
1695   3                                                      Flg_SetMode=!Flg_SetMode;                               
1696   3                                              break;                  
1697   3                                      case D_SetMode_V2:
1698   3                                                      Flg_SetMode=!Flg_SetMode;                               
1699   3                                              break;
1700   3                                      case D_SetMode_K:
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 29  

1701   3                                                      Flg_SetMode=!Flg_SetMode;                               
1702   3                                              break;  
1703   3                                      case D_SetMode_Frc:
1704   3                                                      Flg_SetMode=!Flg_SetMode;                               
1705   3                                              break;
1706   3                                      case D_SetMode_TV:
1707   3                                                      Flg_SetMode=!Flg_SetMode;
1708   3                                                      R_DataTmp_TV=0;
1709   3                                                      R_PluseCnt=0;
1710   3                                              break;  
1711   3                                      default:
1712   3                                              break;                                                                          
1713   3                                  }
1714   2                                      break;
1715   2      
1716   2                               default:;                         
1717   2                                       break;
1718   2                              }
1719   1      
1720   1      }
1721          //-------------------------------------------
1722          /*---------------按键扫描子程序------------
1723          //--------------------------------------------
1724          /输入：
1725          /输出：各个按键键值R_KeyValue，用于按键中间层使用
1726          /备注：定时器中断子程序中调用
1727          /
1728          */
1729          //-------------------------------------------   
1730          //void  KeyScan()//放在中断函数中执行125us执行一次
1731          //{
1732          //      R_KeyValue=0;
1733          //      if(!Pin_KeyUp)
1734          //              {
1735          //              R_KeyValue=D_keyUp;
1736          //              }
1737          //              else
1738          //                      {
1739          //
1740          //                      }
1741          //      if(!Pin_KeyDown)
1742          //              {
1743          //              R_KeyValue=D_keyDown;
1744          //              }
1745          //              else
1746          //                      {
1747          //
1748          //                      }               
1749          //                      
1750          //      if(!Pin_TimerSet)
1751          //              {
1752          //              R_KeyValue=D_keyTimerSet;       
1753          //              }
1754          //                              
1755          //
1756          //                                                                                                                              
1757          //}
1758          
1759          //-------------------------------------------
1760          /*---------------报警检测子程序------------
1761          //--------------------------------------------
1762          /输入：
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 30  

1763          /输出：
1764          /备注：
1765          /
1766          */
1767          //-------------------------------------------   
1768          void CheckError()
1769          {
1770   1              if(R_AddTimer>=300)
1771   1                      {
1772   2                      if(Flg_ToAdd)//加注过程，连续5分钟没检到脉冲
1773   2                              {
1774   3                              Flg_E1=1;
1775   3                              }       
1776   2                      }       
1777   1                      else
1778   1                              {
1779   2                              Flg_E1=0;       
1780   2                              }
1781   1              if(Flg_ToAdd==0)//停止加注过程
1782   1                      {
1783   2      //              if(R_CheckOutTm==0)
1784   2                              {
1785   3                              if(R_AddPluseCnt>2)//如果2小时后超过2个脉冲，报警
1786   3                                      {
1787   4                                      Flg_E2=1;       
1788   4                                      }       
1789   3                              }
1790   2                      }
1791   1                      else
1792   1                              {
1793   2                              Flg_E2=0;       
1794   2                              }
1795   1      //      R_PreFrcTmp=8000;               
1796   1              R_PreFrc=1/((double)R_PreFrcTmp*T0Cycle)*1000000;       
1797   1              if(R_PreFrc>R_Data_Frc)
1798   1                      {
1799   2                      Flg_E3=1;       
1800   2                      }
1801   1                      else
1802   1                              {
1803   2                              Flg_E3=0;       
1804   2                              }               
1805   1              if(Flg_E1)
1806   1                      {
1807   2                      R_Protect=D_Protect_E1;
1808   2                      }       
1809   1              if(Flg_E2)
1810   1                      {
1811   2                      R_Protect=D_Protect_E2;
1812   2                      }
1813   1              if(Flg_E3)
1814   1                      {
1815   2                      R_Protect=D_Protect_E3;
1816   2                      }                                       
1817   1              if(R_Protect)
1818   1                      {
1819   2                      R_WkMode=D_WkMode_Error;        
1820   2                      Flg_RelayWk3=1;
1821   2                      }       
1822   1                      else
1823   1                              {
1824   2                              Flg_RelayWk3=0; 
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 31  

1825   2                              }
1826   1      }
1827          //-------------------------------------------
1828          /*--------------保护恢复子程序------------
1829          //--------------------------------------------
1830          /输入：
1831          /输出：
1832          /备注：
1833          /
1834          */
1835          //-------------------------------------------   
1836          void Recovery()
1837          {
1838   1              switch(R_Protect)
1839   1              {
1840   2                      case 0:
1841   2                              
1842   2                              break;
1843   2                      case D_Protect_E1:
1844   2                              if(Flg_E1==0)
1845   2                                      {
1846   3                                      R_WkMode=0;
1847   3                                      R_Protect=0;    
1848   3                                      }
1849   2                              break;
1850   2                      case D_Protect_E2:
1851   2                              if(Flg_E2==0)
1852   2                                      {
1853   3                                      R_WkMode=0;
1854   3                                      R_Protect=0;    
1855   3                                      }                       
1856   2                              break;
1857   2                      case D_Protect_E3:
1858   2                              if(Flg_E3==0)
1859   2                                      {
1860   3                                      R_WkMode=0;
1861   3                                      R_Protect=0;    
1862   3                                      }                       
1863   2                              break;
1864   2                      case D_Protect_E4:
1865   2                              
1866   2                              break;
1867   2                      case D_Protect_E5:
1868   2                              
1869   2                              break;
1870   2                      case D_Protect_E6:
1871   2                              
1872   2                              break;
1873   2                      case D_Protect_E7:
1874   2                              
1875   2                              break;
1876   2                      default:
1877   2                              break;                                                                                                          
1878   2              }
1879   1      }
1880          
1881          //-------------------------------------------
1882          /*---------------继电器驱动子程序------------
1883          //--------------------------------------------
1884          /输入：
1885          /输出：
1886          /备注：
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 32  

1887          /
1888          */
1889          //-------------------------------------------   
1890          void RelayDrv()
1891          {
1892   1      
1893   1              if(Flg_RelayWk1)
1894   1                      {
1895   2                      Pin_Relay1=1;
1896   2                      }
1897   1                      else
1898   1                              {
1899   2                              Pin_Relay1=0;   
1900   2                              }
1901   1              if(Flg_RelayWk2)
1902   1                      {
1903   2                      Pin_Relay2=1;
1904   2                      }
1905   1                      else
1906   1                              {
1907   2                              Pin_Relay2=0;   
1908   2                              }
1909   1              if(Flg_RelayWk3)
1910   1                      {
1911   2                      Pin_Relay3=1;
1912   2                      }
1913   1                      else
1914   1                              {
1915   2                              Pin_Relay3=0;   
1916   2                              }                                               
1917   1      
1918   1      }               
1919          //-------------------------------------------
1920          /*---------------初始化子程序------------
1921          //--------------------------------------------
1922          /输入：
1923          /输出：
1924          /备注：定时器初始化，看门狗初始化
1925          /
1926          */
1927          //-------------------------------------------   
1928          void Sys_Initial()
1929          {
1930   1              P0M0 = 0x00;
1931   1              P0M1 = 0x00;
1932   1              P1M0 = 0x00;
1933   1              P1M1 = 0x00;
1934   1              P2M0 = 0x00;
1935   1              P2M1 = 0x00;
1936   1              P3M0 = 0x00;
1937   1              P3M1 = 0x00;
1938   1              P4M0 = 0x00;
1939   1              P4M1 = 0x00;
1940   1              P5M0 = 0x00;
1941   1              P5M1 = 0x00;
1942   1              P6M0 = 0x00;
1943   1              P6M1 = 0x00;
1944   1      //      //输出
1945   1      //      P0M0|=(0x01|0x02|0x04|0x08|0x10|0x20|0x40|0x80);        
1946   1      //      P0M1&=~(0x01|0x02|0x04|0x08|0x10|0x20|0x40|0x80);
1947   1      //      //输入
1948   1      //      P0M0&=~(0x01|0x02|0x04|0x08|0x10|0x20|0x40|0x80);       
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 33  

1949   1      //      P0M1|=(0x01|0x02|0x04|0x08|0x10|0x20|0x40|0x80);
1950   1      //      
1951   1      //      //输出
1952   1      //      P1M0|=(0x01|0x02|0x04|0x08|0x10|0x20|0x40|0x80);        
1953   1      //      P1M1&=~(0x01|0x02|0x04|0x08|0x10|0x20|0x40|0x80);
1954   1      //      //输入
1955   1      //      P1M0&=~(0x01|0x02|0x04|0x08|0x10|0x20|0x40|0x80);       
1956   1      //      P1M1|=(0x01|0x02|0x04|0x08|0x10|0x20|0x40|0x80);
1957   1      //      
1958   1      //      //输出
1959   1              P2M0|=(0x01|0x00|0x00|0x00|0x00|0x00|0x00|0x00);        
1960   1              P2M1&=~(0x01|0x00|0x00|0x00|0x00|0x00|0x00|0x00);
1961   1      //      //输入
1962   1      //      P2M0&=~(0x01|0x02|0x04|0x08|0x10|0x20|0x40|0x80);       
1963   1      //      P2M1|=(0x01|0x02|0x04|0x08|0x10|0x20|0x40|0x80);
1964   1      //      
1965   1      //      //输出
1966   1      //      P3M0|=(0x01|0x02|0x04|0x08|0x10|0x20|0x40|0x80);        
1967   1      //      P3M1&=~(0x01|0x02|0x04|0x08|0x10|0x20|0x40|0x80);
1968   1      //      //输入
1969   1      //      P3M0&=~(0x01|0x02|0x04|0x08|0x10|0x20|0x40|0x80);       
1970   1      //      P3M1|=(0x01|0x02|0x04|0x08|0x10|0x20|0x40|0x80);
1971   1      //      //输出
1972   1      //      P4M0|=(0x01|0x02|0x04|0x08|0x10|0x20|0x40|0x80);        
1973   1      //      P4M1&=~(0x01|0x02|0x04|0x08|0x10|0x20|0x40|0x80);
1974   1      //      //输入
1975   1      //      P4M0&=~(0x01|0x02|0x04|0x08|0x10|0x20|0x40|0x80);       
1976   1      //      P4M1|=(0x01|0x02|0x04|0x08|0x10|0x20|0x40|0x80);
1977   1      //      
1978   1      //      //输出
1979   1      //      P5M0|=(0x01|0x02|0x04|0x08|0x10|0x20|0x40|0x80);        
1980   1      //      P5M1&=~(0x01|0x02|0x04|0x08|0x10|0x20|0x40|0x80);
1981   1      //      //输入
1982   1      //      P5M0&=~(0x01|0x02|0x04|0x08|0x10|0x20|0x40|0x80);       
1983   1      //      P5M1|=(0x01|0x02|0x04|0x08|0x10|0x20|0x40|0x80);        
1984   1      
1985   1      //------------------------------------------定时器0配置         
1986   1               AUXR |= 0x80;      //定时器0为1T模式
1987   1      //       AUXR &= 0x7f;      //定时器0为12T模式
1988   1              TMOD &= 0xf0;           //设置定时器模式 工作方式0,16位自动重载 
1989   1              TL0 = T0Timer;          //设置定时初值
1990   1              TH0 = T0Timer>>8;       //设置定时初值125us 
1991   1          TR0 = 1;            //定时器0开始计时
1992   1          ET0 = 1;            //使能定时器0中断
1993   1      //------------------------------------------串口波特率配置：0检验位，1停止位
1994   1              SCON = 0x50;            //8位数据,可变波特率
1995   1              AUXR |= 0x01;           //串口1选择定时器2为波特率发生器
1996   1              AUXR |= 0x04;           //定时器2时钟为Fosc,即1T
1997   1              T2L = (65536 - (FOSC/4/BAUD));   //设置波特率重装值
1998   1          T2H = (65536 - (FOSC/4/BAUD))>>8;
1999   1              AUXR |= 0x10;           //启动定时器2
2000   1      //      AUXR1 = 0x40;   //将串口1切换到P36，P37         
2001   1              ES = 1;             //串口中断打开
2002   1      //------------------------------------------    
2003   1      //      AUXR |= 0x40;           //定时器1时钟为Fosc,即1T
2004   1      //      AUXR &= 0xFE;           //串口1选择定时器1为波特率发生器
2005   1      //      SCON = 0x5a;                    //8 bit data ,no parity bit
2006   1      //      TMOD = 0x20;                    //T1 as 8-bit auto reload
2007   1      ////            TH1 = TL1 = -(FOSC/32/BAUD); //Set Uart baudrate
2008   1      //      T1L = (65536 - (FOSC/4/BAUD));   //设置波特率重装值
2009   1      //    T1H = (65536 - (FOSC/4/BAUD))>>8;
2010   1      //  TR1 = 1;                        //T1 start running
C51 COMPILER V9.00   MAIN                                                                  11/09/2017 16:51:27 PAGE 34  

2011   1      ////---------------------------------------------外部中断0配置  
2012   1          INT0 = 1;
2013   1          IT0 = 1;                    //设置INT0的中断类型 (1:仅下降沿 0:上升沿和下降沿)
2014   1          EX0 = 1;                    //使能INT0中断
2015   1          
2016   1      //------------------------------------------ 总中断配置
2017   1          EA = 1;
2018   1              
2019   1      //-------------------------------------------看门狗配置
2020   1          WDT_CONTR = 0x02;       //看门狗定时器溢出时间计算公式: (12 * 32768 * PS) / FOSC (秒)
2021   1                                  //设置看门狗定时器分频数为32,溢出时间如下:
2022   1                                  //11.0592M : 1.14s
2023   1                                  //18.432M  : 0.68s
2024   1                                  //20M      : 0.63s
2025   1          WDT_CONTR |= 0x20;      //启动看门狗  
2026   1          
2027   1      }
2028          
2029          void SaveDateToErrom()
2030          {
2031   1      
2032   1      //      if(Flg_ToErrom)//保存区域分界线的值
2033   1      //              {
2034   1      //              IapEraseSector(0x000);
2035   1      //              IapProgramByte(0x001,0>>8);     //
2036   1      //              IapProgramByte(0x002,0);
2037   1      //              IapProgramByte(0x003,0>>8);     //
2038   1      //              IapProgramByte(0x004,0);        
2039   1      //              IapProgramByte(0x005,0>>8);     //
2040   1      //              IapProgramByte(0x006,0);
2041   1      //              IapProgramByte(0x007,0>>8);     //
2042   1      //              IapProgramByte(0x008,0);        
2043   1      //              IapProgramByte(0x009,0>>8);     //
2044   1      //              IapProgramByte(0x00a,0);
2045   1      //              IapProgramByte(0x00b,0>>8);     //
2046   1      //              IapProgramByte(0x00c,0);        
2047   1      //              IapProgramByte(0x00d,00>>8);    //
2048   1      //              IapProgramByte(0x00e,00);
2049   1      //              IapProgramByte(0x00f,0);        //
2050   1      //              IapProgramByte(0x010,0);                                        
2051   1      //              IapProgramByte(0x011,0);
2052   1      //              IapProgramByte(0x012,0);
2053   1      //              IapProgramByte(0x013,0);
2054   1      //              IapProgramByte(0x000,0x55);
2055   1      //              Flg_ToErrom=0;                          
2056   1      //              }
2057   1      
2058   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   4958    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     79    ----
   IDATA SIZE       =     65    ----
   BIT SIZE         =      7       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
