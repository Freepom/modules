C51 COMPILER V9.00   MAIN                                                                  08/10/2017 19:14:16 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: G:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          
   2          #include "stc15w.h"
   3          #include "display.h"
   4          
   5          #include "ReadKey.h"
   6          
   7          #define u8 unsigned char
   8          #define u16 unsigned int
   9          
  10          #define FOSC    11092500L
  11          #define BAUD    9600
  12          #define T1Timer (65536-FOSC/8000)
  13          #define PinPP(Pn,n) {switch(Pn){\                                                       
  14                                  case 0:P0M1 &= ~(1 << n);P0M0 |=  (1 << n);break;\
  15                                  case 1:P1M1 &= ~(1 << n);P1M0 |=  (1 << n);break;\
  16                                  case 2:P2M1 &= ~(1 << n);P2M0 |=  (1 << n);break;\
  17                                  case 3:P3M1 &= ~(1 << n);P3M0 |=  (1 << n);break;\
  18                                  case 4:P4M1 &= ~(1 << n);P4M0 |=  (1 << n);break;\
  19                                  case 5:P5M1 &= ~(1 << n);P5M0 |=  (1 << n);break;\                                                                              
  20                                  default:break;\                                                                                                                                                         
  21                                  }\
  22                              }
  23                              
  24          #define ClrWDT  {WDT_CONTR |= 0x10;}//清看门狗，喂狗程序                        
  25          
  26          //---------------------------------------------
  27          
  28          
  29          //-----------------主循环架构的定义-----------------------------------
  30          
  31          u16 R_MainTemper;
  32          //u8    R_TimerMSCnt;
  33          u8      R_2ms=0;//2ms计时
  34          bit     Flg_2ms=0;
  35          bit     Flg_500MsFlash;
  36          char    R_JmpmsCnt=0;
  37          
  38          //char  R_MMode=0;
  39          //#define       D_Mode1 0
  40          //#define       D_Mode2 1
  41          //#define       D_Mode3 2
  42          //#define       D_Mode4 3
  43          //#define       D_Mode5 4
  44          //#define       D_Mode6 5
  45          
  46          //----------------------------------------------------------
  47          /**********************************************************************************/
  48          //----按键扫描、按键检测、按键处理的定义-----------------------------------
  49          
  50          sbit Pin_TimerSet       = P3^2;
  51          sbit Pin_Key1           = P1^5;
  52          sbit Pin_Key2           = P1^6;
  53          sbit Pin_Key3           = P1^7;
  54          sbit Pin_Key4           = P5^4;
C51 COMPILER V9.00   MAIN                                                                  08/10/2017 19:14:16 PAGE 2   

  55          
  56          #define nokey           0
  57          #define D_key1          1
  58          #define D_key2          2
  59          #define D_key3          3
  60          #define D_key4          4
  61          #define D_keyTimerSet   5
  62          #define D_keyRelease    6
  63          
  64          
  65          //----------------------------------------------------------
  66          
  67          //----------------------------------------------------------
  68          u8 R_Second,R_Minute,R_Hour;
  69          
  70          //----------------------------------------------------------
  71          
  72          
  73          //-----------------------------------------
  74          //
  75          //初始化处理子程序
  76          //
  77          //-----------------------------------------
  78          void initial()
  79          {
  80   1      
  81   1               AUXR |= 0x80;                   //定时器0为1T模式
  82   1      //       AUXR &= 0x7f;                   //定时器0为12T模式
  83   1              TMOD &= 0xf0;           //设置定时器模式 工作方式0,16位自动重载 
  84   1      //      TL0 = 0x9A;             //设置定时初值
  85   1      //      TH0 = 0xFA;             //设置定时初值 
  86   1      //      TL0 = 0x33;             //设置定时初值
  87   1      //      TH0 = 0xF5;             //设置定时初值
  88   1              TL0 = T1Timer;          //设置定时初值
  89   1              TH0 = T1Timer>>8;               //设置定时初值125us 
  90   1              TR0 = 1;                        //定时器0开始计时
  91   1              ET0 = 1;                        //使能定时器0中断
  92   1      //------------------------------------------
  93   1      
  94   1              SCON = 0x50;            //8位数据,可变波特率
  95   1              AUXR |= 0x01;           //串口1选择定时器2为波特率发生器 9600
  96   1              AUXR |= 0x04;           //定时器2时钟为Fosc,即1T
  97   1      //      T2L = 0xC0;             //设定定时初值  22.M
  98   1      //      T2H = 0xFD;             //设定定时初值
  99   1              T2L = 0xE0;             //设定定时初值
 100   1              T2H = 0xFE;             //设定定时初值  11092500L
 101   1              AUXR |= 0x10;           //启动定时器2
 102   1      //------------------------------------------    
 103   1      //      AUXR |= 0x40;           //定时器1时钟为Fosc,即1T
 104   1      //      AUXR &= 0xFE;           //串口1选择定时器1为波特率发生器
 105   1      //      SCON = 0x5a;                    //8 bit data ,no parity bit
 106   1      //      TMOD = 0x20;                    //T1 as 8-bit auto reload
 107   1      ////            TH1 = TL1 = -(FOSC/32/BAUD); //Set Uart baudrate
 108   1      //      TL1 = 0xB8;             //设定定时初值
 109   1      //      TH1 = 0xB8;             //设定定时器重装值
 110   1      //      TR1 = 1;                        //T1 start running
 111   1      ////---------------------------------------------       
 112   1              ES = 1;                 //Enable UART interrupt
 113   1              EA = 1;
 114   1              
 115   1      //---------------------------------------------------------------------
 116   1          WDT_CONTR = 0x02;       //看门狗定时器溢出时间计算公式: (12 * 32768 * PS) / FOSC (秒)
C51 COMPILER V9.00   MAIN                                                                  08/10/2017 19:14:16 PAGE 3   

 117   1                                  //设置看门狗定时器分频数为32,溢出时间如下:
 118   1                                  //11.0592M : 1.14s
 119   1                                  //18.432M  : 0.68s
 120   1                                  //20M      : 0.63s
 121   1          WDT_CONTR |= 0x20;      //启动看门狗  
 122   1          
 123   1       
 124   1      }
 125          
 126          
 127          //-----------------------------------------
 128          //
 129          //函数声明
 130          //
 131          //-----------------------------------------
 132          
 133          void    NewDisplay2();
 134          void    DealKey();
 135          void    KeyScan();
 136          void    UpdateDisplay();
 137          void    Timer50msCnt();
 138          //-----------------------------------------
 139          //
 140          //主函数处理子程序
 141          //
 142          //-----------------------------------------
 143          main()
 144          {
 145   1              initial();      //定时器初始化
 146   1      
 147   1              ClrWDT;                         
 148   1              while(1)
 149   1              {
 150   2              ClrWDT; 
 151   2      
 152   2              DealKey();      //按键处理
 153   2      
 154   2              if(Flg_2ms)     //10毫秒计时处理
 155   2                      {
 156   3                      Flg_2ms=0;
 157   3      
 158   3                      if(++R_JmpmsCnt == 10)R_JmpmsCnt=0;
 159   3                      switch(R_JmpmsCnt)      //2毫秒分时处理
 160   3                              {
 161   4                              case    0:
 162   4                  
 163   4                                      break;
 164   4                              case    1:
 165   4                                              UpdateDisplay();
 166   4                                      break;
 167   4                              case    2:
 168   4      
 169   4                                              
 170   4                                      break;                                                                                          
 171   4                              case    3:
 172   4      
 173   4                                      break;
 174   4                              case    4:
 175   4      //                                      
 176   4                                      break;
 177   4                              case    5:
 178   4                                              ReadR_KeyValue();       //按键转换
C51 COMPILER V9.00   MAIN                                                                  08/10/2017 19:14:16 PAGE 4   

 179   4                                      break;
 180   4                              case    6:
 181   4                                              UpdateDisplay();
 182   4                                      break;
 183   4                              case    7:
 184   4      //                                      
 185   4                                              
 186   4                                      break;                                                                                          
 187   4                              case    8:
 188   4      //                                      
 189   4                                      break;
 190   4                              case    9:
 191   4                                              Timer50msCnt(); //20毫秒计时
 192   4                                      break;
 193   4                              default:
 194   4                                      break;                                                                                                                          
 195   4                              }
 196   3                      }       
 197   2              }
 198   1      }
 199          
 200          void et0()interrupt 1
 201          {
 202   1              static u8 R_MSCnt=0;
 203   1      //      TL0 = 0x9A;             //设置定时初值
 204   1      //      TH0 = 0xFA;             //设置定时初值125us     
 205   1                      
 206   1              R_MSCnt++;                              
 207   1              if(R_MSCnt == 16)
 208   1                      {
 209   2                      R_MSCnt=0;
 210   2                      Flg_2ms=1;      
 211   2                      }
 212   1              
 213   1      //      BeepDrv();
 214   1              KeyScan();      //按键扫描
 215   1      
 216   1      
 217   1      }
 218          
 219          //串行中断函数
 220          void serial() interrupt 4
 221          {
 222   1      
 223   1      //      RxDataTemp_Tab[R_RxCnt]=SBUF;// 
 224   1              RI=0;
 225   1      
 226   1      }
 227          
 228          
 229          void    UpdateDisplay()
 230          {
 231   1      
 232   1              R_DBUF1=0,R_DBUF2=0,R_DBUF3=0,R_DBUF4=0;
 233   1                                                      
 234   1      }
 235          
 236          
 237          void    Timer50msCnt()
 238          {
 239   1              static char R_500msCnt,R_100msCnt;              
 240   1              R_500msCnt++;
C51 COMPILER V9.00   MAIN                                                                  08/10/2017 19:14:16 PAGE 5   

 241   1              R_100msCnt++;
 242   1      
 243   1                      
 244   1      //----------计时50ms------------------------------------                
 245   1              {
 246   2              if(R_100msCnt==5)
 247   2                      {
 248   3                      R_100msCnt=0;
 249   3                      }       
 250   2                              
 251   2              }
 252   1      //----------计时20ms---END---------------------------------     
 253   1      
 254   1      //----------计时500ms------------------------------------       
 255   1              if(R_500msCnt == 25)
 256   1                      {
 257   2                      R_500msCnt=0;   
 258   2                      
 259   2      //----------此段为500ms------------------------------------
 260   2      
 261   2                      Flg_500MsFlash=!Flg_500MsFlash; 
 262   2      
 263   2      //----------计时1s------------------------------------                          
 264   2                      if(Flg_500MsFlash)
 265   2                              {
 266   3                                                      
 267   3                              R_Second++;
 268   3      
 269   3                              if(R_Second==60)
 270   3                                      {
 271   4                                      R_Second=0;
 272   4                                                                      
 273   4                                      R_Minute++;
 274   4                                      if(R_Minute==60)
 275   4                                              {
 276   5                                              R_Minute=0;
 277   5                                              R_Hour++;
 278   5                                              if(R_Hour==24)
 279   5                                                      {
 280   6                                                      R_Hour=0;       
 281   6                                                      }
 282   5                      
 283   5                                              }       
 284   4                                      }
 285   3                      
 286   3      //------        ----此段为1s------------------------------------                        
 287   3                      
 288   3                              }               
 289   2      //----------计时1s---END---------------------------------                                       
 290   2                      }
 291   1      //----------计时500ms--END----------------------------------
 292   1      
 293   1                              
 294   1                              
 295   1      }
 296          
 297          //-----------------------------------------
 298          //
 299          //按键处理子程序
 300          //
 301          //-----------------------------------------
 302          void    DealKey()//放在主循环中执行
C51 COMPILER V9.00   MAIN                                                                  08/10/2017 19:14:16 PAGE 6   

 303          {
 304   1              u8      R_BottomMode=0;
 305   1              if(Flg_HaveKey == 0)
 306   1                      {
 307   2                      return; 
 308   2                      }
 309   1              Flg_HaveKey=0;  
 310   1      
 311   1                       R_BottomMode = R_CurKey;
 312   1      
 313   1                       switch(R_BottomMode)
 314   1                              {
 315   2                              case D_key1:    
 316   2      
 317   2                                      break;
 318   2      
 319   2                              case D_key2:
 320   2      
 321   2                                      break;
 322   2                              case D_key3: 
 323   2      
 324   2                                      break;
 325   2                              case D_key4:    
 326   2      
 327   2                                      break;  
 328   2                              case D_keyRelease://按键释放键  
 329   2      
 330   2                                      break;                                                                                                                  
 331   2                              case D_keyTimerSet:
 332   2      //                                      EnableDoubleKey();
 333   2      //                                      if(!FLG_keyDouble)
 334   2      //                                              {
 335   2      //                                              break;  
 336   2      //                                              }
 337   2      //                                      FLG_keyDouble=0;                                                
 338   2      
 339   2                                      break;
 340   2      
 341   2      
 342   2                                      break;                          
 343   2                      
 344   2                               default:;                         
 345   2                                       break;
 346   2                              }
 347   1      
 348   1      }
 349          
 350          
 351          //-----------------------------------------
 352          //
 353          //按键扫描处理子程序
 354          //
 355          //-----------------------------------------     
 356          void    KeyScan()//放在中断函数中执行125us执行一次
 357          {
 358   1              R_KeyValue=0;
 359   1              if(!Pin_Key1)
 360   1                      {
 361   2                      R_KeyValue=D_key1;
 362   2                      }
 363   1                      else
 364   1                              {
C51 COMPILER V9.00   MAIN                                                                  08/10/2017 19:14:16 PAGE 7   

 365   2      
 366   2                              }
 367   1              if(!Pin_Key2)
 368   1                      {
 369   2                      R_KeyValue=D_key2;
 370   2                      }
 371   1                      else
 372   1                              {
 373   2      
 374   2                              }               
 375   1              if(!Pin_Key3)
 376   1                      {
 377   2                      R_KeyValue=D_key3;
 378   2                      }
 379   1                      else
 380   1                              {
 381   2      
 382   2                              }               
 383   1              if(!Pin_Key4)
 384   1                      {
 385   2                      R_KeyValue=D_key4;
 386   2                      }
 387   1                      else
 388   1                              {
 389   2              
 390   2                              }                               
 391   1              if(!Pin_TimerSet)
 392   1                      {
 393   2                      R_KeyValue=D_keyTimerSet;       
 394   2                      }
 395   1                                      
 396   1      
 397   1                                                                                                                                      
 398   1      }
 399          
 400          
 401          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    286    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     15    ----
   IDATA SIZE       =     16    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
