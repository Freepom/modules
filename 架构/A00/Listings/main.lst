C51 COMPILER V9.00   MAIN                                                                  03/23/2017 01:25:14 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: G:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          //#include<stc15w.h> 
   2          #include"NRF2401.h"
   3          #define u8 unsigned char
   4          #define u16 unsigned int
   5          
   6          #define FOSC 11059200L
   7          
   8          #define T1MS (65536-FOSC/1000)      //1T模式
   9          //#define T1MS (65536-FOSC/12/1000) //12T模式
  10          
  11          sbit T2CLKO   = P3^0;               //定时器2的时钟输出脚
  12          
  13          #define F38_4KHz (65536-FOSC/2/38400)    //1T模式
  14          //#define F38_4KHz (65536-FOSC/2/12/38400) //12T模式
  15          //-----------------主循环架构的定义-----------------------------------
  16          u8      R_2ms=0;//2ms计时
  17          bit     Flg_2ms=0;
  18          char    R_Jmp2msCnt=0;
  19          
  20          char    R_MMode=0;
  21          #define D_Mode1 0
  22          #define D_Mode2 1
  23          #define D_Mode3 2
  24          #define D_Mode4 3
  25          #define D_Mode5 4
  26          #define D_Mode6 5
  27          
  28          //----------------------------------------------------------
  29          /**********************************************************************************/
  30          //----按键扫描、按键检测、按键处理的定义-----------------------------------
  31          sbit key_onoff   = P5^5;
  32          sbit key_add     = P5^4;
  33          sbit key_sub     = P2^0;
  34          sbit key_slt     = P2^4; 
  35          #define nokey           0
  36          #define addkey          1
  37          #define subkey          2
  38          #define onoffkey        3
  39          #define sltkey          4
  40          
  41          u8      KeyDly          =0;
  42          u8      KeyMarkDly      =0;
  43          bit     FLG_keymark     =0;
  44          char    KeyValue        =0;
  45          char    R_curkey        =0;
  46          char    R_keybuf        =0;
  47          //----------------------------------------------------------
  48          //*************分别是5个从机对应的固定通信频道
  49          u8 R_CHtab[5]={0x40,0x45,0x48,0x4a,0x4f};       //频道
  50          //**********************用户码+地址码+data1+data2+data3，分别对应5个从机                  
  51          u8 R_SendData_Tab[5][6]={{0xf1,0xe0,10,0,0,0},{0xf2,0xe0,60,0,0,0},
  52                                   {0xf4,0xe0,110,0,0,0},{0xf8,0xe0,160,0,0,0},
  53                                   {0xfa,0xe0,210,0,0,0}};        //每个频道的数据数组
  54          #define D_RFChance1     0
C51 COMPILER V9.00   MAIN                                                                  03/23/2017 01:25:14 PAGE 2   

  55          #define D_RFChance2     1
  56          #define D_RFChance3     2
  57          #define D_RFChance4     3
  58          #define D_RFChance5     4
  59          //sfr P1M0=0x91;        //IO口控制寄存器
  60          //
  61          //sfr ADC_CONTR=0xc5;   //ADC控制寄存器
  62          //sfr ADC_DATA=0xc6;
  63          //sfr ADC_LOW2=0xbe;
  64          //
  65          //sfr AUXR=0x8e;
  66          
  67          //sbit  led=P5^5;
  68          sbit    led=P1^5;
  69          u8 ad[4];       //4个电位器的AD值
  70          u8 tx[6];       //6个发送数据
  71          u8 w;
  72          
  73          void initial()
  74          {
  75   1      
  76   1               AUXR |= 0x80;                   //定时器0为1T模式
  77   1      //       AUXR &= 0x7f;                   //定时器0为12T模式
  78   1      
  79   1              TMOD = 0x00;                    //设置定时器为模式0(16位自动重装载)
  80   1              TL0 = 0x9A;             //设置定时初值
  81   1              TH0 = 0xFA;             //设置定时初值125us    
  82   1              TR0 = 1;                        //定时器0开始计时
  83   1              ET0 = 1;                        //使能定时器0中断
  84   1              
  85   1              AUXR |= 0x04;                   //定时器2为1T模式
  86   1      //      AUXR &= ~0x04;                  //定时器2为12T模式
  87   1      
  88   1              AUXR &= ~0x08;                  //T2_C/T=0, 对内部时钟进行时钟输出
  89   1      //      AUXR |= 0x08;                   //T2_C/T=1, 对T2(P3.1)引脚的外部时钟进行时钟输出
  90   1      
  91   1              T2L = F38_4KHz;                 //初始化计时值
  92   1              T2H = F38_4KHz >> 8;
  93   1          
  94   1              AUXR |= 0x10;                   //定时器2开始计时
  95   1              INT_CLKO = 0x04;                //使能定时器2的时钟输出功能
  96   1          
  97   1              EA = 1;    
  98   1      }
  99          
 100          void    DealKey();
 101          void    ReadKeyValue();
 102          void    KeyScan();
 103          void    Timer20msCnt();
 104          //void  RF_CH_Change(unsigned char      RF_CH);
 105          
 106          main()
 107          {
 108   1              initial();      //定时器初始化
 109   1              TX_mode();      //无线模块初始化
 110   1      
 111   1              while(1)
 112   1              {            
 113   2              
 114   2              DealKey();      //按键处理
 115   2              if(Flg_2ms)     //2毫秒计时处理
 116   2                      {
C51 COMPILER V9.00   MAIN                                                                  03/23/2017 01:25:14 PAGE 3   

 117   3                      Flg_2ms=0;
 118   3                      if(++R_Jmp2msCnt == 10)R_Jmp2msCnt=0;
 119   3                      switch(R_Jmp2msCnt)     //2毫秒分时处理
 120   3                              {
 121   4                              case    0:
 122   4                                              ReadKeyValue(); //按键转换
 123   4                                      break;
 124   4                              case    1:
 125   4                                      
 126   4                                      break;
 127   4                              case    2:
 128   4                                      
 129   4                                      break;                                                                                          
 130   4                              case    3:
 131   4                                      
 132   4                                      break;
 133   4                              case    4:
 134   4                                      
 135   4                                      break;
 136   4                              case    5:
 137   4                                      
 138   4                                      break;
 139   4                              case    6:
 140   4                                      
 141   4                                      break;
 142   4                              case    7:
 143   4                                      
 144   4                                      break;
 145   4                              case    8:
 146   4                                      
 147   4                                      break;  
 148   4                              case    9:
 149   4                                              Timer20msCnt(); //20毫秒计时
 150   4                                      break;
 151   4                              default:
 152   4                                      break;                                                                                                                          
 153   4                              }
 154   3                      }       
 155   2              }
 156   1      }
 157          
 158          void et0()interrupt 1
 159          {
 160   1              static  char    temper=0,R_2msCnt=0;
 161   1              temper++;
 162   1              R_2msCnt++;
 163   1              
 164   1              if(R_2msCnt == 16)
 165   1                      {
 166   2                      R_2msCnt=0;
 167   2                      Flg_2ms=1;      
 168   2                      }
 169   1              KeyScan();      //按键扫描
 170   1              
 171   1      }
 172          
 173          void    Timer20msCnt()
 174          {
 175   1              static char     R_500msCnt=0,ii;        
 176   1              static char     R_CHtmp=0;              
 177   1              R_500msCnt++;
 178   1              
C51 COMPILER V9.00   MAIN                                                                  03/23/2017 01:25:14 PAGE 4   

 179   1      //----------计时20ms------------------------------------                
 180   1              {
 181   2              R_CHtmp++;
 182   2              if(R_CHtmp == 5)R_CHtmp=0;
 183   2      //              RF_CH_Change(R_CHtmp);  
 184   2              FIFO_write(R_SendData_Tab[R_CHtmp]);    //发射数据每个频道的周期：20*5ms
 185   2      //      for(ii==1;ii<5;ii++)
 186   2      //              {
 187   2      //              R_SendData_Tab[R_CHtmp][2]=0;   
 188   2      //              }
 189   2              }
 190   1      //----------计时20ms---END---------------------------------     
 191   1      
 192   1      //----------计时500ms------------------------------------       
 193   1              if( (R_500msCnt == 25) || (R_500msCnt == 0) )
 194   1                      {
 195   2      //----------此段为500ms------------------------------------                     
 196   2                      }
 197   1      //----------计时500ms--END----------------------------------
 198   1      
 199   1      //----------计时1s------------------------------------                          
 200   1              if(R_500msCnt == 50)
 201   1                      {
 202   2                      R_500msCnt=0;
 203   2      //----------此段为1s------------------------------------                        
 204   2      
 205   2                      led=!led;               
 206   2      //              if(led)R_SendData_Tab[R_CHtmp][1]=255;
 207   2      //                      else
 208   2      //                              R_SendData_Tab[R_CHtmp][1]=0;   
 209   2              
 210   2                                      
 211   2                      }               
 212   1      //----------计时1s---END---------------------------------                               
 213   1                              
 214   1      }
*** WARNING C280 IN LINE 175 OF MAIN.C: 'ii': unreferenced local variable
 215          void    DealKey()//放在主循环中执行
 216          {
 217   1              char    R_BottomMode=0;
 218   1              static  char    n=0;
 219   1              if(R_curkey != 0)
 220   1                      {
 221   2                       R_BottomMode = R_curkey;
 222   2                       R_curkey=0;
 223   2      
 224   2                       switch(R_BottomMode)
 225   2                              {
 226   3                              case addkey:            
 227   3      //                                      led=!led;               
 228   3      //                                      if(led)R_SendData_Tab[D_RFChance1][1]=255;
 229   3      //                                              else
 230   3      //                                                      R_SendData_Tab[D_RFChance1][1]=0;
 231   3                                      break;
 232   3                              case subkey:            
 233   3                                        
 234   3                                      break;
 235   3                              case onoffkey:          
 236   3                                              led=!led;               
 237   3                                              
 238   3                                              if(n==5)n=0;            
 239   3                                              if(led)R_SendData_Tab[D_RFChance1+n][2]=255,n++;
C51 COMPILER V9.00   MAIN                                                                  03/23/2017 01:25:14 PAGE 5   

 240   3                                                      else
 241   3                                                              R_SendData_Tab[D_RFChance1+n][2]=5;
 242   3                                      break;
 243   3                              case sltkey:      
 244   3                                      
 245   3                                      break;
 246   3                               default:;                         
 247   3                                       break;
 248   3                              }                       
 249   2                      }
 250   1              }
 251          void    ReadKeyValue()//放在2ms分时中执行，20ms执行一次
 252          {
 253   1              if((KeyDly++ >= 2))
 254   1                      { 
 255   2                       R_keybuf=0;
 256   2                       FLG_keymark=0;
 257   2                       KeyDly=0;
 258   2                       KeyValue=0;
 259   2                       KeyMarkDly=0;
 260   2                      }
 261   1              if(KeyValue != 0)
 262   1                      { 
 263   2                      KeyDly=0;
 264   2                      if(KeyValue == R_keybuf)
 265   2                              {
 266   3                                      KeyMarkDly++;
 267   3                                      if(FLG_keymark==0)
 268   3                                              {
 269   4                                              if(KeyMarkDly >= 50)
 270   4                                                      {
 271   5                                                      KeyMarkDly=0;
 272   5                                                      FLG_keymark=1;
 273   5                                                      R_keybuf=R_curkey=KeyValue;     
 274   5                                                      KeyValue=0;                                             
 275   5                                                      }
 276   4                                                      else
 277   4                                                              {
 278   5                                                              KeyValue=0;
 279   5                                                              }
 280   4                                              }
 281   3                                              else
 282   3                                                      {
 283   4                                                      if(KeyMarkDly >= 25)
 284   4                                                              {
 285   5                                                              KeyMarkDly=0;
 286   5                                                              FLG_keymark=1;
 287   5                                                              R_keybuf=R_curkey=KeyValue;     
 288   5                                                              KeyValue=0;                             
 289   5                                                              }
 290   4                                                      else
 291   4                                                              {
 292   5                                                              KeyValue=0;
 293   5                                                              }                                               
 294   4                                                      }               
 295   3                               }
 296   2                              else//非连续建
 297   2                                      {
 298   3                                      R_keybuf=R_curkey=KeyValue;
 299   3                                      KeyValue=0;
 300   3                                      FLG_keymark=0;
 301   3                                      KeyMarkDly=0;   
C51 COMPILER V9.00   MAIN                                                                  03/23/2017 01:25:14 PAGE 6   

 302   3                                      }               
 303   2                              }
 304   1                      else //无按键按下
 305   1                              {
 306   2                                      //R_keybuf=0;
 307   2                               //FLG_keymark=0;
 308   2                               //KeyDly=0;
 309   2                               //KeyValue=0;
 310   2                               //KeyMarkDly=0;
 311   2                              }
 312   1              }
 313                  
 314          void    KeyScan()//放在中断函数中执行125us执行一次
 315          {
 316   1              KeyValue=0;
 317   1              if(!key_add)
 318   1                      {
 319   2                              KeyValue=addkey;                
 320   2                      }
 321   1              if(!key_sub)
 322   1                      {
 323   2      
 324   2                              KeyValue=subkey;        
 325   2                      }
 326   1              if(!key_slt)
 327   1                      {
 328   2                              KeyValue=sltkey;        
 329   2                      }
 330   1              if(!key_onoff)
 331   1                      {
 332   2                              KeyValue=onoffkey;      
 333   2                      }
 334   1              }
 335          //void  RF_CH_Change(unsigned char      RF_CH)
 336          //{
 337          //      CE=0;
 338          //      SCK=0;
 339          ////    REG_write(0x00,0x0a); //CRC,8 bit,Power on,TX
 340          ////    REG_write(0x01,0x00); //unable ACK
 341          ////    REG_write(0x02,0x01); //enable P0
 342          ////    REG_write(0x04,0x00); //unable ACK
 343          //      REG_write(0x05,R_CHtab[RF_CH]); //可自定义
 344          ////    REG_write(0x06,0x07); //1Mbps,0dBm
 345          ////    REG_write(0x11,0x06);//DATA 6 bytes     
 346          //      CE=1;           
 347          //}
 348                  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    355    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     60    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
