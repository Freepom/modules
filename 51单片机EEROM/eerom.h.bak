#ifndef	_eerom_H
#define	_eerom_H
#include<stc15w.h> 
#include "intrins.h"

#define u8 unsigned char
#define u16 unsigned int

//-----------------------------------------------

//sfr IAP_DATA    =   0xC2;           //IAP数据寄存器
//sfr IAP_ADDRH   =   0xC3;           //IAP地址寄存器高字节
//sfr IAP_ADDRL   =   0xC4;           //IAP地址寄存器低字节
//sfr IAP_CMD     =   0xC5;           //IAP命令寄存器
//sfr IAP_TRIG    =   0xC6;           //IAP命令触发寄存器
//sfr IAP_CONTR   =   0xC7;           //IAP控制寄存器

#define CMD_IDLE    0               //空闲模式
#define CMD_READ    1               //IAP字节读命令
#define CMD_PROGRAM 2               //IAP字节编程命令
#define CMD_ERASE   3               //IAP扇区擦除命令

//#define ENABLE_IAP 0x80           //if SYSCLK<30MHz
//#define ENABLE_IAP 0x81           //if SYSCLK<24MHz
//#define ENABLE_IAP  0x82            //if SYSCLK<20MHz
#define ENABLE_IAP 0x83           //if SYSCLK<12MHz
//#define ENABLE_IAP 0x84           //if SYSCLK<6MHz
//#define ENABLE_IAP 0x85           //if SYSCLK<3MHz
//#define ENABLE_IAP 0x86           //if SYSCLK<2MHz
//#define ENABLE_IAP 0x87           //if SYSCLK<1MHz

//测试地址
#define IAP_ADDRESS 0x0400

void Delay(u8 n);
void IapIdle();
u8 IapReadByte(u16 addr);
void IapProgramByte(u16 addr, u8 dat);
void IapEraseSector(u16 addr);

//void SaveDateToErrom()
//{
//
//	if(Flg_ToErrom)
//		{
//
//		IapEraseSector(0x00400);
//		IapProgramByte(0x401,R_CurrendMode);
//		IapProgramByte(0x402,R_WorkTimerMode);
//		IapProgramByte(0x403,0xff);
//		IapProgramByte(0x400,0x55);
//		Flg_ToErrom=0;				
//		}
//
//}
#endif
