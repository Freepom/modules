
//****************************************
// Update to MPU6050 by shinetop
// MCU: STC89C52
// 2012.3.1
// 功能: 显示加速度计和陀螺仪的10位原始数据
//****************************************
// GY-52 MPU3050 IIC测试程序
// 使用单片机STC89C51 
// 晶振：11.0592M
// 显示：LCD1602
// 编译环境 Keil uVision2
// 参考宏晶网站24c04通信程序
// 时间：2011年9月1日
// QQ：531389319
//****************************************
#include <REG51.H>	
#include <math.h>    //Keil library  
#include <stdio.h>   //Keil library	
#include <INTRINS.H>
typedef unsigned char  uchar;
typedef unsigned short ushort;
typedef unsigned int   uint;
//****************************************
// 模拟IIC
//****************************************
sbit    SCL=P1^0;			//IIC时钟引脚定义
sbit    SDA=P1^1;			//IIC数据引脚定义
//****************************************
// 定义MPU6050内部地址
//****************************************
#define	SMPLRT_DIV		0x19	//陀螺仪采样率，典型值：0x07(125Hz)
#define	CONFIG			0x1A	//低通滤波频率，典型值：0x06(5Hz)
#define	GYRO_CONFIG		0x1B	//陀螺仪自检及测量范围，典型值：0x18(不自检，2000deg/s)
#define	ACCEL_CONFIG	0x1C	//加速计自检、测量范围及高通滤波频率，典型值：0x01(不自检，2G，5Hz)
#define	ACCEL_XOUT_H	0x3B		//X轴加速度数据高8位地址
#define	ACCEL_XOUT_L	0x3C		//X轴加速度数据低8位地址
#define	ACCEL_YOUT_H	0x3D		//Y轴加速度数据高8位地址 
#define	ACCEL_YOUT_L	0x3E		//Y轴加速度数据低8位地址 
#define	ACCEL_ZOUT_H	0x3F		//Z轴加速度数据高8位地址 
#define	ACCEL_ZOUT_L	0x40		//Z轴加速度数据低8位地址 
#define	TEMP_OUT_H		0x41		//温度数据高8位地址
#define	TEMP_OUT_L		0x42		//温度数据低8位地址
#define	GYRO_XOUT_H		0x43		//X轴角速度数据高8位地址
#define	GYRO_XOUT_L		0x44		//X轴角速度数据低8位地址	
#define	GYRO_YOUT_H		0x45		//Y轴角速度数据高8位地址  
#define	GYRO_YOUT_L		0x46		//Y轴角速度数据低8位地址	
#define	GYRO_ZOUT_H		0x47		//Z轴角速度数据高8位地址  
#define	GYRO_ZOUT_L		0x48		//Z轴角速度数据低8位地址	
#define	PWR_MGMT_1		0x6B	//电源管理，典型值：0x00(正常启用)
#define	WHO_AM_I			0x75	//IIC地址寄存器(默认数值0x68，只读)
#define	SlaveAddress	0xD0	//IIC写入时的地址字节数据，+1为读取

//MPU6050操作函数
void  InitMPU6050();													//初始化MPU6050
void  Delay5us();
void  I2C_Start();
void  I2C_Stop();
void  I2C_SendACK(bit ack);
bit   I2C_RecvACK();
void  I2C_SendByte(uchar dat);
uchar I2C_RecvByte();
void  I2C_ReadPage();
void  I2C_WritePage();
void  display_ACCEL_x();
void  display_ACCEL_y();
void  display_ACCEL_z();
uchar Single_ReadI2C(uchar REG_Address);						//读取I2C数据
void  Single_WriteI2C(uchar REG_Address,uchar REG_data);	//向I2C写入数据
int GetData(uchar REG_Address)		//，将高8位和低8位数据合并